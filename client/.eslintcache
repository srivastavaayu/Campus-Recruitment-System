[{"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Home.js":"3","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\Home.js":"4","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Profile.js":"5","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ManageUsers.js":"6","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Home.js":"7","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ChangePassword.js":"8","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Notifications.js":"9","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Profile.js":"10","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Home.js":"11","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ManageUsers.js":"12","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ChangePassword.js":"13","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Notifications.js":"14","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Applications.js":"15","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Notifications.js":"16","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\ChangePassword.js":"17","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Profile.js":"18","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Home.js":"19","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Applications.js":"20","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Notifications.js":"21","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\ChangePassword.js":"22","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Profile.js":"23","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\Authenticator.js":"24","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Openings.js":"25","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Openings.js":"26","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Header.js":"27","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Header.js":"28","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Header.js":"29","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Header.js":"30"},{"size":299,"mtime":1619807468940,"results":"31","hashOfConfig":"32"},{"size":4486,"mtime":1619807468931,"results":"33","hashOfConfig":"32"},{"size":166,"mtime":1619807468953,"results":"34","hashOfConfig":"32"},{"size":2350,"mtime":1619807468951,"results":"35","hashOfConfig":"32"},{"size":4424,"mtime":1619807468955,"results":"36","hashOfConfig":"32"},{"size":3247,"mtime":1619807468954,"results":"37","hashOfConfig":"32"},{"size":161,"mtime":1619807468964,"results":"38","hashOfConfig":"32"},{"size":3455,"mtime":1620206988906,"results":"39","hashOfConfig":"32"},{"size":8895,"mtime":1620207368252,"results":"40","hashOfConfig":"32"},{"size":5477,"mtime":1619807468966,"results":"41","hashOfConfig":"32"},{"size":161,"mtime":1619807468959,"results":"42","hashOfConfig":"32"},{"size":3584,"mtime":1620469324106,"results":"43","hashOfConfig":"32"},{"size":3454,"mtime":1620206988912,"results":"44","hashOfConfig":"32"},{"size":7943,"mtime":1620207360028,"results":"45","hashOfConfig":"32"},{"size":5888,"mtime":1619977255726,"results":"46","hashOfConfig":"32"},{"size":1836,"mtime":1619974939144,"results":"47","hashOfConfig":"32"},{"size":3455,"mtime":1620206988908,"results":"48","hashOfConfig":"32"},{"size":4973,"mtime":1619807468961,"results":"49","hashOfConfig":"32"},{"size":166,"mtime":1619807468968,"results":"50","hashOfConfig":"32"},{"size":2635,"mtime":1619976552839,"results":"51","hashOfConfig":"32"},{"size":1849,"mtime":1619976146436,"results":"52","hashOfConfig":"32"},{"size":3453,"mtime":1620206988913,"results":"53","hashOfConfig":"32"},{"size":7057,"mtime":1619807468970,"results":"54","hashOfConfig":"32"},{"size":10814,"mtime":1620453504234,"results":"55","hashOfConfig":"32"},{"size":9500,"mtime":1620453504234,"results":"56","hashOfConfig":"32"},{"size":8725,"mtime":1620456592850,"results":"57","hashOfConfig":"32"},{"size":4819,"mtime":1619807468953,"results":"58","hashOfConfig":"32"},{"size":4879,"mtime":1619807468963,"results":"59","hashOfConfig":"32"},{"size":4024,"mtime":1619807468958,"results":"60","hashOfConfig":"32"},{"size":4032,"mtime":1620456830464,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"kzxzr9",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"64"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"64"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"64"},"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\index.js",[],["142","143"],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\App.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Home.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\Home.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Profile.js",["144","145","146","147"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //back end \r\n\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  //update data functions\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Middle Name (Optional)\"\r\n                  name=\"adminProfileMiddleName\"\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  name=\"adminProfileLastName\"\r\n                  \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ManageUsers.js",["148"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useParams } from \"react-router-dom\";\r\nimport \"../../css/ManageUsers.css\";\r\nimport Header from \"./Header\";\r\n\r\nfunction PendingUsers() {\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Enrollment Number</th>\r\n            <th>Name</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>181B005</td>\r\n            <td>Aayush Srivastava</td>\r\n            <td>\r\n              <button className=\"btn btn-outline-success\">Approve</button>\r\n            </td>\r\n            <td>\r\n              <button className=\"btn btn-outline-danger\">Delete</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\nfunction AllUsers() {\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Enrollment Number</th>\r\n            <th>Name</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>181B005</td>\r\n            <td>Aayush Srivastava</td>\r\n            <td>\r\n              <button className=\"btn btn-outline-success\">Approve</button>\r\n            </td>\r\n            <td>\r\n              <button className=\"btn btn-outline-danger\">Delete</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ManageUsers() {\r\n  let { slug } = useParams();\r\n  let [userType, setUserType] = useState(slug);\r\n  useEffect(() => {\r\n    document\r\n      .getElementsByClassName(\"dropdown-toggle\")[0]\r\n      .classList.add(\"active\");\r\n    if (slug === \"PlacementCoordinators\") {\r\n      setUserType(\"Placement Coordinators\");\r\n    } else {\r\n      setUserType(slug);\r\n    }\r\n  }, [slug]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Manage {userType}\r\n        </h2>\r\n        <hr />\r\n        <div id=\"manageUsersContainer\">\r\n          <nav className=\"nav nav-tabs nav-fill\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to=\"/Admin/ManageUsers/PlacementCoordinators\"\r\n              onClick={() => setUserType(\"PlacementCoordinators\")}\r\n            >\r\n              Placement Coordinators\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to=\"/Admin/ManageUsers/Companies\"\r\n              onClick={() => setUserType(\"Companies\")}\r\n            >\r\n              Companies\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to=\"/Admin/ManageUsers/Students\"\r\n              onClick={() => setUserType(\"Students\")}\r\n            >\r\n              Students\r\n            </NavLink>\r\n          </nav>\r\n          <h3 className=\"text-center\">Pending {userType}</h3>\r\n          <PendingUsers />\r\n          <h3 className=\"text-center\">All {userType}</h3>\r\n          <AllUsers />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManageUsers;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Home.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ChangePassword.js",["149","150","151","152"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction ChangePassword() {\r\n\r\n  //backend\r\n\r\n  const [userData,setUserData] = useState({\r\n    cpassword:\"\",\r\n    npassword:\"\",\r\n    rpassword:\"\",\r\n  });\r\n  const history = useHistory();\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      //console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updatePassword = async (e) =>{\r\n\r\n    e.preventDefault();\r\n\r\n    console.log(userData);\r\n    const {cpassword,npassword,rpassword} = userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/updatePassword\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          cpassword,npassword,rpassword\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status ===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Change Password\r\n        </h2>\r\n        <hr />\r\n        <form action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Current Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Current Password\"\r\n                  name=\"cpassword\"\r\n                  value={userData.cpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">New Password</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"New Password\"\r\n                  name=\"npassword\"\r\n                  value={userData.npassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Re-enter New Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Re-enter New Password\"\r\n                  name=\"rpassword\"\r\n                  value={userData.rpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updatePassword}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Notifications.js",["153","154"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for Notifications\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  const target = (data) => {\r\n    let result = \"\";\r\n    if (data.students) {\r\n      result += \"Students,\";\r\n    }\r\n    if (data.companies) {\r\n      result += \" Companies,\";\r\n    }\r\n    if (data.placementCoordinators) {\r\n      result += \" Placement Coordinators\";\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Target</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(({ date, title, message }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{date}</td>\r\n                <td>{target(notifyData)}</td>\r\n                <td>{title}</td>\r\n                <td>{message}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  //backend for\r\n  const [data, setData] = useState({\r\n    students: \"false\",\r\n    placementCoordinators: \"false\",\r\n    companies: \"false\",\r\n    title: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    //console.log(e.target.name);\r\n    //console.log(e.target.value);\r\n\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    if (e.target.checked) {\r\n      data[name] = \"true\";\r\n    } else {\r\n      data[name] = \"false\";\r\n    }\r\n  };\r\n\r\n  const handleInputsChange = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const sendNotification = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(data);\r\n\r\n    const { students, placementCoordinators, companies, title, message } = data;\r\n    console.log(students, placementCoordinators, companies, title, message);\r\n    try {\r\n      const res = await fetch(\"/notifyData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          students,\r\n          placementCoordinators,\r\n          companies,\r\n          title,\r\n          message,\r\n        }),\r\n      });\r\n\r\n      const resdt = await res.json();\r\n\r\n      if (res.status === 201) {\r\n        console.log(\"Notification successfull\");\r\n        window.alert(\"Notification successfull\");\r\n      } else {\r\n        console.log(\"Notification unsuccessfull\");\r\n        window.alert(\"Notification unsuccessfull\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div\r\n          className=\"modal fade\"\r\n          data-bs-backdrop=\"static\"\r\n          data-bs-keyboard=\"false\"\r\n          id=\"adminAddNotification\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <form method=\"POST\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\">Add Notification</h5>\r\n                  <button\r\n                    className=\"btn-close\"\r\n                    data-bs-dismiss=\"modal\"\r\n                  ></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <label className=\"form-label\" htmlFor=\"adminNotificationType\">\r\n                    Notification Target\r\n                  </label>\r\n                  <div id=\"adminNotificationType\" className=\"mb-3\">\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        id=\"adminTargetCheckbox1\"\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value=\"Placement Coordinators\"\r\n                        name=\"placementCoordinators\"\r\n                        onChange={handleInputs}\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"adminTargetCheckbox1\"\r\n                      >\r\n                        Placement Coordinators\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        id=\"adminTargetCheckbox2\"\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value=\"Companies\"\r\n                        name=\"companies\"\r\n                        onChange={handleInputs}\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"adminTargetCheckbox2\"\r\n                      >\r\n                        Companies\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        id=\"adminTargetCheckbox3\"\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value=\"Students\"\r\n                        name=\"students\"\r\n                        onChange={handleInputs}\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"adminTargetCheckbox3\"\r\n                      >\r\n                        Students\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <label\r\n                    className=\"form-label\"\r\n                    htmlFor=\"adminNotificationTitle\"\r\n                  >\r\n                    Notification Title\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"adminNotificationTitle\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Notification Title\"\r\n                      name=\"title\"\r\n                      value={data.title}\r\n                      onChange={handleInputsChange}\r\n                    />\r\n                  </div>\r\n                  <label\r\n                    className=\"form-label\"\r\n                    htmlFor=\"adminNotificationMessage\"\r\n                  >\r\n                    Notification Message\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <textarea\r\n                      id=\"adminNotificationMessage\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Notification Message\"\r\n                      name=\"message\"\r\n                      value={data.message}\r\n                      onChange={handleInputsChange}\r\n                      rows=\"4\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={sendNotification}\r\n                  >\r\n                    Push Notification\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n          <Link>\r\n            <button\r\n              className=\"btn btn-primary rounded-pill\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#adminAddNotification\"\r\n            >\r\n              Add Notification\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Profile.js",["155","156","157","158"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //back end for placement profile\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone,address,department}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone,address,department\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Middle Name (Optional)\"\r\n                  name=\"placementCoordinatorProfileMiddleName\"\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  name=\"placementCoordinatorProfileLastName\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-12\">\r\n                <label className=\"col-form-label\">Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Address\"\r\n                  name=\"address\"\r\n                  value={userData.address}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Department</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Department\"\r\n                  name=\"department\"\r\n                  value={userData.department}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Home.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ManageUsers.js",["159","160","161","162","163"],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ChangePassword.js",["164","165","166","167"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction ChangePassword() {\r\n\r\n  //backend\r\n\r\n  const [userData,setUserData] = useState({\r\n    cpassword:\"\",\r\n    npassword:\"\",\r\n    rpassword:\"\",\r\n  });\r\n  const history = useHistory();\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      //console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updatePassword = async (e) =>{\r\n\r\n    e.preventDefault();\r\n\r\n    console.log(userData);\r\n    const {cpassword,npassword,rpassword} = userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/updatePassword\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          cpassword,npassword,rpassword\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status ===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Change Password\r\n        </h2>\r\n        <hr />\r\n        <form action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Current Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Current Password\"\r\n                  name=\"cpassword\"\r\n                  value={userData.cpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">New Password</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"New Password\"\r\n                  name=\"npassword\"\r\n                  value={userData.npassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Re-enter New Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Re-enter New Password\"\r\n                  name=\"rpassword\"\r\n                  value={userData.rpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick ={updatePassword}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Notifications.js",["168","169"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for all notifications\r\n\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  const target = (data) => {\r\n    let result = \"\";\r\n    if (data.students) {\r\n      result += \"Students,\";\r\n    }\r\n    if (data.companies) {\r\n      result += \"Companies\";\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Target</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(({ date, title, message }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{date}</td>\r\n                <td>{target(notifyData)}</td>\r\n                <td>{title}</td>\r\n                <td>{message}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  //backend for\r\n  const [data, setData] = useState({\r\n    students: \"false\",\r\n    companies: \"false\",\r\n    title: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    //console.log(e.target.name);\r\n    //console.log(e.target.value);\r\n\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    if (e.target.checked) {\r\n      data[name] = \"true\";\r\n    } else {\r\n      data[name] = \"false\";\r\n    }\r\n  };\r\n\r\n  const handleInputsChange = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const sendNotification = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(data);\r\n\r\n    const { students, companies, title, message } = data;\r\n    console.log(students, companies, title, message);\r\n    try {\r\n      const res = await fetch(\"/notifyData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          students,\r\n          companies,\r\n          title,\r\n          message,\r\n        }),\r\n      });\r\n\r\n      const resdt = await res.json();\r\n\r\n      if (res.status === 201) {\r\n        console.log(\"Notification successfull\");\r\n        window.alert(\"Notification successfull\");\r\n      } else {\r\n        console.log(\"Notification unsuccessfull\");\r\n        window.alert(\"Notification unsuccessfull\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div\r\n          className=\"modal fade\"\r\n          data-bs-backdrop=\"static\"\r\n          data-bs-keyboard=\"false\"\r\n          id=\"placementCoordinatorAddNotification\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Add Notification</h5>\r\n                <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <label\r\n                  className=\"form-label\"\r\n                  htmlFor=\"placementCoordinatorNotificationType\"\r\n                >\r\n                  Notification Target\r\n                </label>\r\n                <div id=\"placementCoordinatorNotificationType\" className=\"mb-3\">\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"placementCoordinatorTargetCheckbox1\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"Companies\"\r\n                      name=\"companies\"\r\n                      onChange={handleInputs}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"placementCoordinatorTargetCheckbox1\"\r\n                    >\r\n                      Companies\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"placementCoordinatorTargetCheckbox2\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"Students\"\r\n                      name=\"students\"\r\n                      onChange={handleInputs}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"placementCoordinatorTargetCheckbox2\"\r\n                    >\r\n                      Students\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <label\r\n                  className=\"form-label\"\r\n                  htmlFor=\"placementCoordinatorNotificationTitle\"\r\n                >\r\n                  Notification Title\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    id=\"placementCoordinatorNotificationTitle\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Notification Title\"\r\n                    name=\"title\"\r\n                    value={data.title}\r\n                    onChange={handleInputsChange}\r\n                  />\r\n                </div>\r\n                <label\r\n                  className=\"form-label\"\r\n                  htmlFor=\"placementCoordinatorNotificationMessage\"\r\n                >\r\n                  Notification Message\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <textarea\r\n                    id=\"placementCoordinatorNotificationMessage\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Notification Message\"\r\n                    name=\"message\"\r\n                    value={data.message}\r\n                    onChange={handleInputsChange}\r\n                    rows=\"4\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                  Close\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={sendNotification}\r\n                >\r\n                  Push Notification\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n          <Link>\r\n            <button\r\n              className=\"btn btn-primary rounded-pill\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#placementCoordinatorAddNotification\"\r\n            >\r\n              Add Notification\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Applications.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Notifications.js",["170","171"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for all notifications\r\n\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(({ date, title, message }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{date}</td>\r\n                <td>{title}</td>\r\n                <td>{message}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\ChangePassword.js",["172","173","174","175"],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Profile.js",["176","177","178","179"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //backend\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone,address,companyLink}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone,address,companyLink\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Company Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-8\">\r\n                <label className=\"col-form-label\">Company Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"Company Address\"\r\n                  name=\"address\"\r\n                  value={userData.address}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <label className=\"col-form-label\">Company Website</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"\"\r\n                  placeholder=\"Company Website\"\r\n                  name=\"companyLink\"\r\n                  value={userData.companyLink}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Company E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Company Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Home.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Applications.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Notifications.js",["180","181"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for all notifications\r\n\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(({ date, title, message }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{date}</td>\r\n                <td>{title}</td>\r\n                <td>{message}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\ChangePassword.js",["182","183","184","185"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction ChangePassword() {\r\n\r\n  //backend\r\n\r\n  const [userData,setUserData] = useState({\r\n    cpassword:\"\",\r\n    npassword:\"\",\r\n    rpassword:\"\",\r\n  });\r\n  const history = useHistory();\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      //console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updatePassword = async (e) =>{\r\n\r\n    e.preventDefault();\r\n\r\n    console.log(userData);\r\n    const {cpassword,npassword,rpassword} = userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/updatePassword\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          cpassword,npassword,rpassword\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status ===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Change Password\r\n        </h2>\r\n        <hr />\r\n        <form action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Current Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Current Password\"\r\n                  name=\"cpassword\"\r\n                  value={userData.cpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">New Password</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"New Password\"\r\n                  name=\"npassword\"\r\n                  value={userData.npassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Re-enter New Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Re-enter New Password\"\r\n                  name=\"rpassword\"\r\n                  value={userData.rpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updatePassword}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Profile.js",["186","187","188","189"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //back end \r\n\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  //update data functions\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone,address,department,portfolio,links}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone,address,department,portfolio,links\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n\r\n\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Middle Name (Optional)\"\r\n                  name=\"studentProfileMiddleName\"\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  name=\"studentProfileLastName\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-12\">\r\n                <label className=\"col-form-label\">Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Address\"\r\n                  name=\"address\"\r\n                  value={userData.address}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-5\">\r\n                <label className=\"col-form-label\">Department</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Department\"\r\n                  name=\"department\"\r\n                  value={userData.department}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-7\">\r\n                <label htmlFor=\"studentResume\" className=\"col-form-label\">\r\n                  Resume\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"file\"\r\n                  id=\"studentResume\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-4\">\r\n                <label\r\n                  htmlFor=\"studentProfilePortfolioLink\"\r\n                  className=\"col-form-label\"\r\n                >\r\n                  Portfolio Link\r\n                </label>\r\n                <input\r\n                  id=\"studentProfilePortfolioLink\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Portfolio Link\"\r\n                  name=\"portfolio\"\r\n                  onChange={handleInputs}\r\n                  value={userData.portfolio}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <label htmlFor=\"studentProfileLink\" className=\"col-form-label\">\r\n                  Link\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Link\"\r\n                  id=\"studentProfileLink\"\r\n                  name=\"links\"\r\n                  value={userData.links}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\Authenticator.js",["190","191","192","193","194","195"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport \"../css/Header.css\";\r\nimport \"../css/Home.css\";\r\nimport crslogo from \"../img/crslogo.png\";\r\nimport Select from \"react-select\";\r\n\r\nfunction Authenticator(props) {\r\n  let [authMode, setAuthMode] = useState(props.location.state.authMode);\r\n  let [authTitle, setAuthTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (authMode === \"login\") {\r\n      setAuthTitle(\"Login to Campus Recruitment System\");\r\n      document.getElementById(\"loginForm\").style.display = \"block\";\r\n      document.getElementById(\"registerForm\").style.display = \"None\";\r\n    } else {\r\n      setAuthTitle(\"Signup on Campus Recruitment System\");\r\n      document.getElementById(\"loginForm\").style.display = \"None\";\r\n      document.getElementById(\"registerForm\").style.display = \"block\";\r\n    }\r\n  }, [authMode]);\r\n\r\n  //backend\r\n  const history = useHistory();\r\n  const data = [\r\n    {\r\n      value: 1,\r\n      label: \"Admin\",\r\n    },\r\n    {\r\n      value: 2,\r\n      label: \"Placement Coordinator\",\r\n    },\r\n    {\r\n      value: 3,\r\n      label: \"Company\",\r\n    },\r\n    {\r\n      value: 4,\r\n      label: \"Student\",\r\n    },\r\n  ];\r\n\r\n  const [user, setUser] = useState({\r\n    member: \"\",\r\n    userName: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [signUser, setSignUser] = useState({\r\n    member: \"\",\r\n    userName: \"\",\r\n    password: \"\",\r\n    rpassword :\"\",\r\n  });\r\n  const [selectedValue, setSelectedValue] = useState();\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    console.log(e.target.value);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n  const handleChange = (e) => {\r\n    setSelectedValue(e.label);\r\n    name = \"member\";\r\n    value = e.label;\r\n    setUser({ ...user, [name]: value });\r\n    console.log(e.label);\r\n    console.log(user.member);\r\n  };\r\n\r\n  //sign up form\r\n\r\n  const handleChange1 = (e) => {\r\n    setSelectedValue(e.label);\r\n    name = \"member\";\r\n    value = e.label;\r\n    setSignUser({ ...user, [name]: value });\r\n    console.log(e.label);\r\n    console.log(user.member);\r\n  };\r\n\r\n  const handleInputs1 = (e) => {\r\n    console.log(e.target.value);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setSignUser({ ...signUser, [name]: value });\r\n  };\r\n  const random=(e)=>{\r\n    console.log(\"calling a function\");\r\n  }\r\n\r\n  //register a user\r\n  const registerUser = async (e)=>{\r\n    e.preventDefault();\r\n    console.log(signUser);\r\n\r\n    const {member,userName,password,rpassword} = signUser;\r\n    try{\r\n      const res = await fetch(\"/registerUser\",{\r\n        method: \"POST\",\r\n        headers:{ \r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          member,userName,password,rpassword\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===201){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const logIn = async (e) => {\r\n    e.preventDefault();\r\n    console.log(user);\r\n    const { member, userName, password } = user;\r\n    try {\r\n      const res = await fetch(\"/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          member,\r\n          userName,\r\n          password,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(\"SuccessFul\");\r\n        window.alert(\"Successful\");\r\n\r\n        if (member == \"Student\") {\r\n          history.push(\"/Student/Home\");\r\n        } else if (member == \"Placement Coordinator\") {\r\n          history.push(\"/PlacementCoordinator/Home\");\r\n        } else if (member == \"Company\") {\r\n          history.push(\"/Company/Home\");\r\n        } else if (member == \"Admin\") {\r\n          history.push(\"/Admin/Home\");\r\n        }\r\n      } else {\r\n        console.log(\"Invalid Credantials\");\r\n        window.alert(\"Invalid Credantials\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Error\");\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#homeAuthNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"homeAuthNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/About\">\r\n                    About\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n      <main id=\"homeAuthMain\">\r\n        <h2 className=\"text-center\">{authTitle}</h2>\r\n        <form id=\"loginForm\" action=\"\" method=\"POST\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"InputLoginMemberType\">\r\n              Member Type\r\n            </label>\r\n            <Select\r\n              id=\"InputLoginMemberType\"\r\n              placeholder=\"Select Option\"\r\n              name=\"member\"\r\n              value={data.find((obj) => obj.value === selectedValue)} // set selected value\r\n              options={data} // set list of the data\r\n              onChange={handleChange} // assign onChange function\r\n            />\r\n          </div>\r\n          <label className=\"form-label\" htmlFor=\"InputLoginUsername\">\r\n            Username\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">@</span>\r\n            <input\r\n              id=\"InputLoginUsername\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              name=\"userName\"\r\n              value={user.userName}\r\n              onChange={handleInputs}\r\n              required\r\n            />\r\n          </div>\r\n          <label className=\"form-label\" htmlFor=\"InputLoginPassword\">\r\n            Password\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              id=\"InputLoginPassword\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={user.password}\r\n              onChange={handleInputs}\r\n              required\r\n            />\r\n            <button\r\n              id=\"homeAuthButtonForgotPassword\"\r\n              className=\"btn btn-outline-warning\"\r\n            >\r\n              Forgot Password?\r\n            </button>\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary float-start\"\r\n            onClick={() =>\r\n              setAuthMode(authMode === \"login\" ? \"signup\" : \"login\")\r\n            }\r\n          >\r\n            New to Campus Recruitment System? Register here!\r\n          </button>\r\n          <button\r\n            className=\"btn btn-success float-end\"\r\n            onClick={logIn}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n        <form id=\"registerForm\" action=\"\" method=\"POST\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"InputRegisterMemberType\">\r\n              Member Type\r\n            </label>\r\n            <Select\r\n              id=\"InputRegisterMemberType\"\r\n              placeholder=\"Select Option\"\r\n              name=\"member\"\r\n              value={data.find((obj) => obj.value === selectedValue)} // set selected value\r\n              options={data} // set list of the data\r\n              onChange={handleChange1} // assign onChange function\r\n            />\r\n          </div>\r\n          <label className=\"form-label\" htmlFor=\"InputRegisterUsername\">\r\n            Username\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">@</span>\r\n            <input\r\n              id=\"InputRegisterUsername\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              name=\"userName\"\r\n              value={signUser.userName}\r\n              onChange={handleInputs1}\r\n              required\r\n            />\r\n          </div>\r\n          <label className=\"form-label\" htmlFor=\"InputRegisterPassword\">\r\n            Password\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              id=\"InputRegisterPassword\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={signUser.password}\r\n              onChange={handleInputs1}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <label className=\"form-label\" htmlFor=\"InputRegisterReenterPassword\">\r\n            Re-enter Password\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              id=\"InputRegisterReenterPassword\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Re-enter Password\"\r\n              name=\"rpassword\"\r\n              value={signUser.rpassword}\r\n              onChange={handleInputs1}\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary float-start\"\r\n            onClick={() =>\r\n              setAuthMode(authMode === \"login\" ? \"signup\" : \"login\")\r\n            }\r\n          >\r\n            Already have an account? Login here!\r\n          </button>\r\n          <button\r\n            className=\"btn btn-success float-end\"\r\n            onClick={registerUser}\r\n            type=\"submit\"\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Authenticator;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Openings.js",["196","197","198"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction CurrentOpenings() {\r\n  //back end\r\n  const [jobData, setJobData] = useState([]);\r\n  const history = useHistory();\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/jobopenings\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setJobData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n  //job archive back-end code\r\n  const archive = async (jobId,title)=>{\r\n    console.log(\"Inside Archive function\");\r\n    console.log(jobId);\r\n    console.log(title);\r\n\r\n    try{\r\n      const res = await fetch(\"/jobArchive\",{\r\n        method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            jobId,\r\n            title\r\n          })\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        if(res.status===202){\r\n          console.log(data.message);\r\n          window.alert(data.message);\r\n        }else{\r\n          console.log(data.message);\r\n          window.alert(data.message);\r\n        }\r\n    }catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Job ID</th>\r\n            <th>Job Title</th>\r\n            <th>Archive Job</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobData.map(({ jobId, title }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{jobId}</td>\r\n                <td>{title}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\" onClick={archive.bind(this,jobId, title)}>\r\n                    Archive Job\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllOpenings() {\r\n  //back end for all Openings\r\n\r\n  const [jobData, setJobData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/alljobopenings\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setJobData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Job ID</th>\r\n            <th>Job Title</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobData.map(({ jobId, title }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{jobId}</td>\r\n                <td>{title}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Openings() {\r\n  //back end\r\n\r\n  const history = useHistory();\r\n  const [job, setJob] = useState({\r\n    jobId: \"\",\r\n    title: \"\",\r\n    ctc: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    console.log(e.target.value);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setJob({ ...job, [name]: value });\r\n  };\r\n\r\n  const addJob = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { jobId, title, ctc,description } = job;\r\n\r\n    try {\r\n      const res = await fetch(\"/job\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          jobId,\r\n          title,\r\n          ctc,\r\n          description,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 201) {\r\n        console.log(\"Job created successfully\");\r\n        window.alert(\"Job created successfully\");\r\n        history.push(\"/Company/Openings\");\r\n      } else {\r\n        console.log(\"Job Id already exists\");\r\n        window.alert(\"Job Id already exists\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div\r\n          className=\"modal fade\"\r\n          data-bs-backdrop=\"static\"\r\n          data-bs-keyboard=\"false\"\r\n          id=\"companyCreateOpening\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Create Opening</h5>\r\n                <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n              </div>\r\n              <form method=\"POST\">\r\n                <div className=\"modal-body\">\r\n                  <label className=\"form-label\" htmlFor=\"companyJobId\">\r\n                    Job Id\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"companyJobId\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job ID\"\r\n                      name=\"jobId\"\r\n                      value={job.jobId}\r\n                      onChange={handleInputs}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <label className=\"form-label\" htmlFor=\"companyJobTitle\">\r\n                    Job Title\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"companyJobTitle\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job Title\"\r\n                      name=\"title\"\r\n                      value={job.title}\r\n                      onChange={handleInputs}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <label className=\"form-label\" htmlFor=\"companyJobDescription\">\r\n                    Job Description\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <textarea\r\n                      id=\"companyJobDescription\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job Description\"\r\n                      name=\"description\"\r\n                      value={job.description}\r\n                      onChange={handleInputs}\r\n                      rows=\"4\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"companyFileInputs\" className=\"form-label\">\r\n                      Attach Files\r\n                    </label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"file\"\r\n                      id=\"companyFileInputs\"\r\n                      multiple\r\n                    />\r\n                  </div>\r\n                  <label className=\"form-label\" htmlFor=\"companyCTCOffered\">\r\n                    CTC Offered\r\n                  </label>\r\n                  <input\r\n                    id=\"companyCTCOffered\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"CTC Offered\"\r\n                    name=\"ctc\"\r\n                    value={job.ctc}\r\n                    onChange={handleInputs}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    type=\"Submit\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={addJob}\r\n                  >\r\n                    Add Job\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Openings</h2>\r\n          <hr />\r\n          <Link>\r\n            <button\r\n              className=\"btn btn-primary rounded-pill\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#companyCreateOpening\"\r\n            >\r\n              Create Opening\r\n            </button>\r\n          </Link>\r\n          <h3 className=\"text-center\">Current Openings</h3>\r\n          <CurrentOpenings />\r\n          <h3 className=\"text-center\">All Openings</h3>\r\n          <AllOpenings />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Openings;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Openings.js",["199","200","201","202"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport Header from \"./Header\";\r\n\r\nfunction CurrentOpenings() {\r\n  //Back end\r\n  const [jobData, setJobData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage1 = async () => {\r\n    try {\r\n      const res = await fetch(\"/jobopenings\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setJobData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  //student Data\r\n  const [userData, setUserData] = useState({});\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/userData\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  const [jobInfo, setJobInfo] = useState({\r\n    /*jobId: \"\",\r\n    creator: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    companyDescription: \"\",*/\r\n  });\r\n\r\n  //companyDescription\r\n  const comapny = async () => {\r\n    const { creator } = jobInfo;\r\n    try {\r\n      const res = await fetch(\"/companyDescription\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          creator,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        jobInfo.companyDescription = data.companyDescription;\r\n        console.log(jobInfo);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const apply = async (e) => {\r\n    const { jobId, creator, title, description, companyDescription } = jobInfo;\r\n    const { userName, name, email, phone, department } = userData;\r\n\r\n    try {\r\n      const res = await fetch(\"/applyJob\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          jobId,\r\n          creator,\r\n          title,\r\n          description,\r\n          companyDescription,\r\n          userName,\r\n          name,\r\n          email,\r\n          phone,\r\n          department,\r\n        }),\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  let name, value;\r\n  const archive = async (jobId, creatorName, title, description) => {\r\n    value = creatorName;\r\n    //console.log(value);\r\n    /*jobInfo.creator = value;\r\n    jobInfo.jobId = jobId;\r\n    jobInfo.title = title;\r\n    jobInfo.description = description;\r\n    console.log(jobInfo);*/\r\n    setJobInfo({\r\n      creator: value,\r\n      jobId: jobId,\r\n      title: title,\r\n      description: description,\r\n    });\r\n\r\n    await comapny();\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage1();\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"modal fade\"\r\n        data-bs-backdrop=\"static\"\r\n        data-bs-keyboard=\"false\"\r\n        id=\"studentViewJob\"\r\n        tabIndex=\"-1\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">View Job</h5>\r\n              <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <label className=\"form-label\" htmlFor=\"studentViewJobCompanyName\">\r\n                Company Name\r\n              </label>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  id=\"studentViewJobCompanyName\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Company Name\"\r\n                  name=\"CompanyName\"\r\n                  value={jobInfo.creator}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <label\r\n                className=\"form-label\"\r\n                htmlFor=\"studentViewJobCompanyDescription\"\r\n              >\r\n                Company Description\r\n              </label>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  id=\"studentViewJobCompanyDescription\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Company Description\"\r\n                  name=\"CompanyDescription\"\r\n                  value={jobInfo.companyDescription}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <label className=\"form-label\" htmlFor=\"studentViewJobJobID\">\r\n                Job ID\r\n              </label>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  id=\"studentViewJobJobID\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Job ID\"\r\n                  name=\"JobID\"\r\n                  value={jobInfo.jobId}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <label className=\"form-label\" htmlFor=\"studentViewJobJobTitle\">\r\n                Job Title\r\n              </label>\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  id=\"studentViewJobJobTitle\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Job Title\"\r\n                  name=\"JobTitle\"\r\n                  value={jobInfo.title}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <label\r\n                className=\"form-label\"\r\n                htmlFor=\"studentViewJobJobDescription\"\r\n              >\r\n                Job Description\r\n              </label>\r\n              <div className=\"input-group mb-3\">\r\n                <textarea\r\n                  id=\"studentViewJobJobDescription\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Job Description\"\r\n                  name=\"message\"\r\n                  rows=\"4\"\r\n                  value={jobInfo.description}\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={apply}>\r\n                Apply to this job\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Name</th>\r\n            <th>Job Title</th>\r\n            <th>View Job</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobData.map(({ jobId, creatorName, title, description }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{creatorName}</td>\r\n                <td>{title}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-primary\"\r\n                    data-bs-target=\"#studentViewJob\"\r\n                    data-bs-toggle=\"modal\"\r\n                    onClick={archive.bind(\r\n                      this,\r\n                      jobId,\r\n                      creatorName,\r\n                      title,\r\n                      description\r\n                    )}\r\n                  >\r\n                    View Job\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Openings() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Openings</h2>\r\n          <hr />\r\n          <h3 className=\"text-center\">Current Openings</h3>\r\n          <CurrentOpenings />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Openings;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Header.js",["203","204","205","206"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink,useHistory } from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  let [username, setUsername] = useState(props.username);\r\n\r\n  //back end\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"dropdown-toggle\")[0].style.userSelect =\r\n      \"None\";\r\n    document.getElementsByClassName(\"dropdown-toggle\")[1].style.userSelect =\r\n      \"None\";\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/Admin/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#adminNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"adminNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Admin/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li class=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    Manage Users\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Admin/ManageUsers/PlacementCoordinators\"\r\n                    >\r\n                      Manage Placement Coordinators\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Admin/ManageUsers/Companies\"\r\n                    >\r\n                      Manage Companies\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Admin/ManageUsers/Students\"\r\n                    >\r\n                      Manage Students\r\n                    </NavLink>\r\n                  </div>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Admin/Notifications\">\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink className=\"dropdown-item\" to=\"/Admin/Profile\">\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Admin/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{username}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Header.js",["207","208","209","210"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink,useHistory } from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  let [username, setUsername] = useState(props.username);\r\n\r\n  //backend\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"dropdown-toggle\")[0].style.userSelect =\r\n      \"None\";\r\n    document.getElementsByClassName(\"dropdown-toggle\")[1].style.userSelect =\r\n      \"None\";\r\n\r\n    callAboutPage();\r\n\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/PlacementCoordinator/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#placementCoordinatorNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div\r\n              id=\"placementCoordinatorNavbarMenu\"\r\n              className=\"collapse navbar-collapse\"\r\n            >\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/PlacementCoordinator/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    Manage Users\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/PlacementCoordinator/ManageUsers/Companies\"\r\n                    >\r\n                      Manage Companies\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/PlacementCoordinator/ManageUsers/Students\"\r\n                    >\r\n                      Manage Students\r\n                    </NavLink>\r\n                  </div>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"/PlacementCoordinator/Notifications\"\r\n                  >\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/PlacementCoordinator/Profile\"\r\n                    >\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/PlacementCoordinator/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{username}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Header.js",["211","212","213"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink,useHistory } from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  let [username, setUsername] = useState(props.username);\r\n\r\n  //backend\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"dropdown-toggle\")[0].style.userSelect =\r\n      \"None\";\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/Company/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#companyNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"companyNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Applications\">\r\n                    Applications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Openings\">\r\n                    Openings\r\n                  </NavLink>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Notifications\">\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink className=\"dropdown-item\" to=\"/Company/Profile\">\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Company/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{username}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Header.js",["214","215","216"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  let [username, setUsername] = useState(props.username);\r\n\r\n  //back end \r\n\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"dropdown-toggle\")[0].style.userSelect =\r\n      \"None\";\r\n      callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/Student/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#studentNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"studentNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Applications\">\r\n                    Applications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Openings\">\r\n                    Openings\r\n                  </NavLink>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Notifications\">\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink className=\"dropdown-item\" to=\"/Student/Profile\">\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Student/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{username}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n",{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"226","line":69,"column":13,"nodeType":"223","messageId":"224","endLine":69,"endColumn":17},{"ruleId":"227","severity":1,"message":"228","line":86,"column":5,"nodeType":"229","endLine":86,"endColumn":7,"suggestions":"230"},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"231","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"232","line":14,"column":9,"nodeType":"223","messageId":"224","endLine":14,"endColumn":16},{"ruleId":"227","severity":1,"message":"228","line":52,"column":6,"nodeType":"229","endLine":52,"endColumn":8,"suggestions":"233"},{"ruleId":"221","severity":1,"message":"234","line":138,"column":13,"nodeType":"223","messageId":"224","endLine":138,"endColumn":18},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"226","line":67,"column":13,"nodeType":"223","messageId":"224","endLine":67,"endColumn":17},{"ruleId":"227","severity":1,"message":"228","line":84,"column":5,"nodeType":"229","endLine":84,"endColumn":7,"suggestions":"235"},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"236","line":6,"column":10,"nodeType":"223","messageId":"224","endLine":6,"endColumn":26},{"ruleId":"221","severity":1,"message":"237","line":16,"column":10,"nodeType":"223","messageId":"224","endLine":16,"endColumn":22},{"ruleId":"221","severity":1,"message":"238","line":26,"column":10,"nodeType":"223","messageId":"224","endLine":26,"endColumn":25},{"ruleId":"221","severity":1,"message":"239","line":36,"column":10,"nodeType":"223","messageId":"224","endLine":36,"endColumn":21},{"ruleId":"221","severity":1,"message":"231","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"232","line":14,"column":9,"nodeType":"223","messageId":"224","endLine":14,"endColumn":16},{"ruleId":"227","severity":1,"message":"228","line":50,"column":6,"nodeType":"229","endLine":50,"endColumn":8,"suggestions":"240"},{"ruleId":"221","severity":1,"message":"234","line":134,"column":13,"nodeType":"223","messageId":"224","endLine":134,"endColumn":18},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"227","severity":1,"message":"228","line":38,"column":6,"nodeType":"229","endLine":38,"endColumn":8,"suggestions":"241"},{"ruleId":"221","severity":1,"message":"231","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"232","line":14,"column":9,"nodeType":"223","messageId":"224","endLine":14,"endColumn":16},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"226","line":66,"column":13,"nodeType":"223","messageId":"224","endLine":66,"endColumn":17},{"ruleId":"227","severity":1,"message":"228","line":83,"column":5,"nodeType":"229","endLine":83,"endColumn":7,"suggestions":"242"},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"227","severity":1,"message":"228","line":38,"column":6,"nodeType":"229","endLine":38,"endColumn":8,"suggestions":"243"},{"ruleId":"221","severity":1,"message":"231","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"232","line":14,"column":9,"nodeType":"223","messageId":"224","endLine":14,"endColumn":16},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"226","line":69,"column":13,"nodeType":"223","messageId":"224","endLine":69,"endColumn":17},{"ruleId":"227","severity":1,"message":"228","line":86,"column":5,"nodeType":"229","endLine":86,"endColumn":7,"suggestions":"244"},{"ruleId":"221","severity":1,"message":"245","line":93,"column":9,"nodeType":"223","messageId":"224","endLine":93,"endColumn":15},{"ruleId":"221","severity":1,"message":"226","line":146,"column":13,"nodeType":"223","messageId":"224","endLine":146,"endColumn":17},{"ruleId":"246","severity":1,"message":"247","line":152,"column":20,"nodeType":"248","messageId":"249","endLine":152,"endColumn":22},{"ruleId":"246","severity":1,"message":"247","line":154,"column":27,"nodeType":"248","messageId":"249","endLine":154,"endColumn":29},{"ruleId":"246","severity":1,"message":"247","line":156,"column":27,"nodeType":"248","messageId":"249","endLine":156,"endColumn":29},{"ruleId":"246","severity":1,"message":"247","line":158,"column":27,"nodeType":"248","messageId":"249","endLine":158,"endColumn":29},{"ruleId":"227","severity":1,"message":"228","line":67,"column":6,"nodeType":"229","endLine":67,"endColumn":8,"suggestions":"250"},{"ruleId":"227","severity":1,"message":"228","line":134,"column":6,"nodeType":"229","endLine":134,"endColumn":8,"suggestions":"251"},{"ruleId":"221","severity":1,"message":"226","line":200,"column":13,"nodeType":"223","messageId":"224","endLine":200,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"252","line":104,"column":13,"nodeType":"223","messageId":"224","endLine":104,"endColumn":16},{"ruleId":"221","severity":1,"message":"253","line":127,"column":7,"nodeType":"223","messageId":"224","endLine":127,"endColumn":11},{"ruleId":"227","severity":1,"message":"254","line":149,"column":6,"nodeType":"229","endLine":149,"endColumn":8,"suggestions":"255"},{"ruleId":"221","severity":1,"message":"256","line":7,"column":18,"nodeType":"223","messageId":"224","endLine":7,"endColumn":29},{"ruleId":"227","severity":1,"message":"228","line":49,"column":6,"nodeType":"229","endLine":49,"endColumn":8,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":83,"column":19,"nodeType":"260","endLine":87,"endColumn":20},{"ruleId":"258","severity":1,"message":"259","line":117,"column":19,"nodeType":"260","endLine":121,"endColumn":20},{"ruleId":"221","severity":1,"message":"256","line":7,"column":18,"nodeType":"223","messageId":"224","endLine":7,"endColumn":29},{"ruleId":"227","severity":1,"message":"228","line":51,"column":6,"nodeType":"229","endLine":51,"endColumn":8,"suggestions":"261"},{"ruleId":"258","severity":1,"message":"259","line":88,"column":19,"nodeType":"260","endLine":92,"endColumn":20},{"ruleId":"258","severity":1,"message":"259","line":119,"column":19,"nodeType":"260","endLine":123,"endColumn":20},{"ruleId":"221","severity":1,"message":"256","line":7,"column":18,"nodeType":"223","messageId":"224","endLine":7,"endColumn":29},{"ruleId":"227","severity":1,"message":"228","line":47,"column":6,"nodeType":"229","endLine":47,"endColumn":8,"suggestions":"262"},{"ruleId":"258","severity":1,"message":"259","line":97,"column":19,"nodeType":"260","endLine":101,"endColumn":20},{"ruleId":"221","severity":1,"message":"256","line":7,"column":18,"nodeType":"223","messageId":"224","endLine":7,"endColumn":29},{"ruleId":"227","severity":1,"message":"228","line":49,"column":6,"nodeType":"229","endLine":49,"endColumn":8,"suggestions":"263"},{"ruleId":"258","severity":1,"message":"259","line":99,"column":19,"nodeType":"260","endLine":103,"endColumn":20},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callAboutPage'. Either include it or remove the dependency array.","ArrayExpression",["266"],"'useEffect' is defined but never used.","'history' is assigned a value but never used.",["267"],"'resdt' is assigned a value but never used.",["268"],"'PendingCompanies' is defined but never used.","'AllCompanies' is defined but never used.","'PendingStudents' is defined but never used.","'AllStudents' is defined but never used.",["269"],["270"],["271"],["272"],["273"],"'random' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["274"],["275"],"'res' is assigned a value but never used.","'name' is defined but never used.","React Hook useEffect has missing dependencies: 'callAboutPage' and 'callAboutPage1'. Either include them or remove the dependency array.",["276"],"'setUsername' is assigned a value but never used.",["277"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["278"],["279"],["280"],"no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"281","fix":"283"},{"desc":"281","fix":"284"},{"desc":"281","fix":"285"},{"desc":"281","fix":"286"},{"desc":"281","fix":"287"},{"desc":"281","fix":"288"},{"desc":"281","fix":"289"},{"desc":"281","fix":"290"},{"desc":"281","fix":"291"},{"desc":"292","fix":"293"},{"desc":"281","fix":"294"},{"desc":"281","fix":"295"},{"desc":"281","fix":"296"},{"desc":"281","fix":"297"},"Update the dependencies array to be: [callAboutPage]",{"range":"298","text":"299"},{"range":"300","text":"299"},{"range":"301","text":"299"},{"range":"302","text":"299"},{"range":"303","text":"299"},{"range":"304","text":"299"},{"range":"305","text":"299"},{"range":"306","text":"299"},{"range":"307","text":"299"},{"range":"308","text":"299"},"Update the dependencies array to be: [callAboutPage, callAboutPage1]",{"range":"309","text":"310"},{"range":"311","text":"299"},{"range":"312","text":"299"},{"range":"313","text":"299"},{"range":"314","text":"299"},[1871,1873],"[callAboutPage]",[1221,1223],[1901,1903],[1135,1137],[926,928],[1878,1880],[926,928],[1941,1943],[1637,1639],[3183,3185],[3505,3507],"[callAboutPage, callAboutPage1]",[1219,1221],[1222,1224],[1125,1127],[1133,1135]]