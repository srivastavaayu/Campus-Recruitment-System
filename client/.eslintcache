[{"E:\\Campus-Recruitment-System\\client\\src\\index.js":"1","E:\\Campus-Recruitment-System\\client\\src\\App.js":"2","E:\\Campus-Recruitment-System\\client\\src\\snippets\\Authenticator.js":"3","E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Notifications.js":"4","E:\\Campus-Recruitment-System\\client\\src\\snippets\\Home.js":"5","E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ChangePassword.js":"6","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Notifications.js":"7","E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Home.js":"8","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ChangePassword.js":"9","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Home.js":"10","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Applications.js":"11","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Profile.js":"12","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Home.js":"13","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Notifications.js":"14","E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Profile.js":"15","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Home.js":"16","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Applications.js":"17","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Notifications.js":"18","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Profile.js":"19","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Openings.js":"20","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Profile.js":"21","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Openings.js":"22","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\ChangePassword.js":"23","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\ChangePassword.js":"24","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ManageUsers.js":"25","E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ManageUsers.js":"26","E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Header.js":"27","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Header.js":"28","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Header.js":"29","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Header.js":"30"},{"size":299,"mtime":1620136447180,"results":"31","hashOfConfig":"32"},{"size":4486,"mtime":1620136447158,"results":"33","hashOfConfig":"32"},{"size":11866,"mtime":1620565585726,"results":"34","hashOfConfig":"32"},{"size":8895,"mtime":1620214530945,"results":"35","hashOfConfig":"32"},{"size":2350,"mtime":1620136447211,"results":"36","hashOfConfig":"32"},{"size":3329,"mtime":1620113304907,"results":"37","hashOfConfig":"32"},{"size":7943,"mtime":1620214530947,"results":"38","hashOfConfig":"32"},{"size":166,"mtime":1620136447215,"results":"39","hashOfConfig":"32"},{"size":3329,"mtime":1620112587549,"results":"40","hashOfConfig":"32"},{"size":166,"mtime":1620136447241,"results":"41","hashOfConfig":"32"},{"size":6373,"mtime":1620562428467,"results":"42","hashOfConfig":"32"},{"size":7057,"mtime":1620136447245,"results":"43","hashOfConfig":"32"},{"size":161,"mtime":1620136447224,"results":"44","hashOfConfig":"32"},{"size":1849,"mtime":1620136447242,"results":"45","hashOfConfig":"32"},{"size":4424,"mtime":1620136447218,"results":"46","hashOfConfig":"32"},{"size":161,"mtime":1620136447232,"results":"47","hashOfConfig":"32"},{"size":11630,"mtime":1620564213506,"results":"48","hashOfConfig":"32"},{"size":1836,"mtime":1620136447225,"results":"49","hashOfConfig":"32"},{"size":4973,"mtime":1620136447228,"results":"50","hashOfConfig":"32"},{"size":9500,"mtime":1620220647256,"results":"51","hashOfConfig":"32"},{"size":5477,"mtime":1620136447236,"results":"52","hashOfConfig":"32"},{"size":8866,"mtime":1620566799769,"results":"53","hashOfConfig":"32"},{"size":3329,"mtime":1620112309103,"results":"54","hashOfConfig":"32"},{"size":3328,"mtime":1620109982989,"results":"55","hashOfConfig":"32"},{"size":12918,"mtime":1620544562449,"results":"56","hashOfConfig":"32"},{"size":19256,"mtime":1620550154725,"results":"57","hashOfConfig":"32"},{"size":4819,"mtime":1620136447213,"results":"58","hashOfConfig":"32"},{"size":4879,"mtime":1620136447231,"results":"59","hashOfConfig":"32"},{"size":4024,"mtime":1620136447223,"results":"60","hashOfConfig":"32"},{"size":4032,"mtime":1620136447240,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"f17y4w",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"64"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"64"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"64"},"E:\\Campus-Recruitment-System\\client\\src\\index.js",[],["142","143"],"E:\\Campus-Recruitment-System\\client\\src\\App.js",[],"E:\\Campus-Recruitment-System\\client\\src\\snippets\\Authenticator.js",["144","145","146","147","148"],"E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Notifications.js",["149","150"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for Notifications\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  const target = (data) => {\r\n    let result = \"\";\r\n    if (data.students) {\r\n      result += \"Students,\";\r\n    }\r\n    if (data.companies) {\r\n      result += \" Companies,\";\r\n    }\r\n    if (data.placementCoordinators) {\r\n      result += \" Placement Coordinators\";\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Target</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(({ date, title, message }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{date}</td>\r\n                <td>{target(notifyData)}</td>\r\n                <td>{title}</td>\r\n                <td>{message}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  //backend for\r\n  const [data, setData] = useState({\r\n    students: \"false\",\r\n    placementCoordinators: \"false\",\r\n    companies: \"false\",\r\n    title: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    //console.log(e.target.name);\r\n    //console.log(e.target.value);\r\n\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    if (e.target.checked) {\r\n      data[name] = \"true\";\r\n    } else {\r\n      data[name] = \"false\";\r\n    }\r\n  };\r\n\r\n  const handleInputsChange = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const sendNotification = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(data);\r\n\r\n    const { students, placementCoordinators, companies, title, message } = data;\r\n    console.log(students, placementCoordinators, companies, title, message);\r\n    try {\r\n      const res = await fetch(\"/notifyData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          students,\r\n          placementCoordinators,\r\n          companies,\r\n          title,\r\n          message,\r\n        }),\r\n      });\r\n\r\n      const resdt = await res.json();\r\n\r\n      if (res.status === 201) {\r\n        console.log(\"Notification successfull\");\r\n        window.alert(\"Notification successfull\");\r\n      } else {\r\n        console.log(\"Notification unsuccessfull\");\r\n        window.alert(\"Notification unsuccessfull\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div\r\n          className=\"modal fade\"\r\n          data-bs-backdrop=\"static\"\r\n          data-bs-keyboard=\"false\"\r\n          id=\"adminAddNotification\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <form method=\"POST\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\">Add Notification</h5>\r\n                  <button\r\n                    className=\"btn-close\"\r\n                    data-bs-dismiss=\"modal\"\r\n                  ></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <label className=\"form-label\" htmlFor=\"adminNotificationType\">\r\n                    Notification Target\r\n                  </label>\r\n                  <div id=\"adminNotificationType\" className=\"mb-3\">\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        id=\"adminTargetCheckbox1\"\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value=\"Placement Coordinators\"\r\n                        name=\"placementCoordinators\"\r\n                        onChange={handleInputs}\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"adminTargetCheckbox1\"\r\n                      >\r\n                        Placement Coordinators\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        id=\"adminTargetCheckbox2\"\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value=\"Companies\"\r\n                        name=\"companies\"\r\n                        onChange={handleInputs}\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"adminTargetCheckbox2\"\r\n                      >\r\n                        Companies\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        id=\"adminTargetCheckbox3\"\r\n                        className=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        value=\"Students\"\r\n                        name=\"students\"\r\n                        onChange={handleInputs}\r\n                      />\r\n                      <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"adminTargetCheckbox3\"\r\n                      >\r\n                        Students\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <label\r\n                    className=\"form-label\"\r\n                    htmlFor=\"adminNotificationTitle\"\r\n                  >\r\n                    Notification Title\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"adminNotificationTitle\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Notification Title\"\r\n                      name=\"title\"\r\n                      value={data.title}\r\n                      onChange={handleInputsChange}\r\n                    />\r\n                  </div>\r\n                  <label\r\n                    className=\"form-label\"\r\n                    htmlFor=\"adminNotificationMessage\"\r\n                  >\r\n                    Notification Message\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <textarea\r\n                      id=\"adminNotificationMessage\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Notification Message\"\r\n                      name=\"message\"\r\n                      value={data.message}\r\n                      onChange={handleInputsChange}\r\n                      rows=\"4\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={sendNotification}\r\n                  >\r\n                    Push Notification\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n          <Link>\r\n            <button\r\n              className=\"btn btn-primary rounded-pill\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#adminAddNotification\"\r\n            >\r\n              Add Notification\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\Home.js",[],"E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ChangePassword.js",["151","152","153","154"],"import React, { useEffect,useState } from \"react\";\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\nimport Header from \"./Header\";\n\nfunction ChangePassword() {\n\n  //backend\n\n  const [userData,setUserData] = useState({\n    cpassword:\"\",\n    npassword:\"\",\n    rpassword:\"\",\n  });\n  const history = useHistory();\n\n  let name,value;\n  const handleInputs = (e) =>{\n      //console.log(e.target.value);\n      name = e.target.name;\n      value=e.target.value;\n\n      setUserData({...userData,[name]:value});\n  }\n\n  const updatePassword = async (e) =>{\n\n    e.preventDefault();\n\n    console.log(userData);\n    const {cpassword,npassword,rpassword} = userData;\n\n    try{\n\n      const res = await fetch(\"/updatePassword\",{\n        method:\"POST\",\n        headers:{\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cpassword,npassword,rpassword\n        })\n      });\n\n      const data = await res.json();\n\n      if (res.status ===202){\n        console.log(data.message);\n        window.alert(data.message);\n      }else{\n        console.log(data.message);\n        window.alert(data.message);\n      }\n    }catch(e){\n      console.log(e);\n    }\n\n  }\n\n\n  return (\n    <>\n      <Header />\n      <main id=\"main\">\n        <h2 id=\"webpageTitle\" className=\"text-center\">\n          Change Password\n        </h2>\n        <hr />\n        <form action=\"\" method=\"POST\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-3\">\n              <label className=\" col-sm-3 col-form-label\">\n                Current Password\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Current Password\"\n                  name=\"cpassword\"\n                  value={userData.cpassword}\n                  onChange={handleInputs}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <label className=\" col-sm-3 col-form-label\">New Password</label>\n              <div className=\"col-sm-9\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"New Password\"\n                  name=\"npassword\"\n                  value={userData.npassword}\n                  onChange={handleInputs}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <label className=\" col-sm-3 col-form-label\">\n                Re-enter New Password\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Re-enter New Password\"\n                  name=\"rpassword\"\n                  value={userData.rpassword}\n                  onChange={handleInputs}\n                />\n              </div>\n            </div>\n          </div>\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updatePassword}>\n            Save Changes\n          </button>\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\n            Cancel\n          </button>\n        </form>\n      </main>\n    </>\n  );\n}\n\nexport default ChangePassword;\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Notifications.js",["155","156"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for all notifications\r\n\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  const target = (data) => {\r\n    let result = \"\";\r\n    if (data.students) {\r\n      result += \"Students,\";\r\n    }\r\n    if (data.companies) {\r\n      result += \"Companies\";\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Target</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(({ date, title, message }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{date}</td>\r\n                <td>{target(notifyData)}</td>\r\n                <td>{title}</td>\r\n                <td>{message}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  //backend for\r\n  const [data, setData] = useState({\r\n    students: \"false\",\r\n    companies: \"false\",\r\n    title: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    //console.log(e.target.name);\r\n    //console.log(e.target.value);\r\n\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    if (e.target.checked) {\r\n      data[name] = \"true\";\r\n    } else {\r\n      data[name] = \"false\";\r\n    }\r\n  };\r\n\r\n  const handleInputsChange = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const sendNotification = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(data);\r\n\r\n    const { students, companies, title, message } = data;\r\n    console.log(students, companies, title, message);\r\n    try {\r\n      const res = await fetch(\"/notifyData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          students,\r\n          companies,\r\n          title,\r\n          message,\r\n        }),\r\n      });\r\n\r\n      const resdt = await res.json();\r\n\r\n      if (res.status === 201) {\r\n        console.log(\"Notification successfull\");\r\n        window.alert(\"Notification successfull\");\r\n      } else {\r\n        console.log(\"Notification unsuccessfull\");\r\n        window.alert(\"Notification unsuccessfull\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div\r\n          className=\"modal fade\"\r\n          data-bs-backdrop=\"static\"\r\n          data-bs-keyboard=\"false\"\r\n          id=\"placementCoordinatorAddNotification\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Add Notification</h5>\r\n                <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <label\r\n                  className=\"form-label\"\r\n                  htmlFor=\"placementCoordinatorNotificationType\"\r\n                >\r\n                  Notification Target\r\n                </label>\r\n                <div id=\"placementCoordinatorNotificationType\" className=\"mb-3\">\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"placementCoordinatorTargetCheckbox1\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"Companies\"\r\n                      name=\"companies\"\r\n                      onChange={handleInputs}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"placementCoordinatorTargetCheckbox1\"\r\n                    >\r\n                      Companies\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"placementCoordinatorTargetCheckbox2\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"Students\"\r\n                      name=\"students\"\r\n                      onChange={handleInputs}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"placementCoordinatorTargetCheckbox2\"\r\n                    >\r\n                      Students\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <label\r\n                  className=\"form-label\"\r\n                  htmlFor=\"placementCoordinatorNotificationTitle\"\r\n                >\r\n                  Notification Title\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    id=\"placementCoordinatorNotificationTitle\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Notification Title\"\r\n                    name=\"title\"\r\n                    value={data.title}\r\n                    onChange={handleInputsChange}\r\n                  />\r\n                </div>\r\n                <label\r\n                  className=\"form-label\"\r\n                  htmlFor=\"placementCoordinatorNotificationMessage\"\r\n                >\r\n                  Notification Message\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <textarea\r\n                    id=\"placementCoordinatorNotificationMessage\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Notification Message\"\r\n                    name=\"message\"\r\n                    value={data.message}\r\n                    onChange={handleInputsChange}\r\n                    rows=\"4\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                  Close\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={sendNotification}\r\n                >\r\n                  Push Notification\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n          <Link>\r\n            <button\r\n              className=\"btn btn-primary rounded-pill\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#placementCoordinatorAddNotification\"\r\n            >\r\n              Add Notification\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Home.js",[],"E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ChangePassword.js",["157","158","159","160"],"import React, { useEffect,useState } from \"react\";\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\nimport Header from \"./Header\";\n\nfunction ChangePassword() {\n\n  //backend\n\n  const [userData,setUserData] = useState({\n    cpassword:\"\",\n    npassword:\"\",\n    rpassword:\"\",\n  });\n  const history = useHistory();\n\n  let name,value;\n  const handleInputs = (e) =>{\n      //console.log(e.target.value);\n      name = e.target.name;\n      value=e.target.value;\n\n      setUserData({...userData,[name]:value});\n  }\n\n  const updatePassword = async (e) =>{\n\n    e.preventDefault();\n\n    console.log(userData);\n    const {cpassword,npassword,rpassword} = userData;\n\n    try{\n\n      const res = await fetch(\"/updatePassword\",{\n        method:\"POST\",\n        headers:{\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cpassword,npassword,rpassword\n        })\n      });\n\n      const data = await res.json();\n\n      if (res.status ===202){\n        console.log(data.message);\n        window.alert(data.message);\n      }else{\n        console.log(data.message);\n        window.alert(data.message);\n      }\n    }catch(e){\n      console.log(e);\n    }\n\n  }\n\n  return (\n    <>\n      <Header />\n      <main id=\"main\">\n        <h2 id=\"webpageTitle\" className=\"text-center\">\n          Change Password\n        </h2>\n        <hr />\n        <form action=\"\" method=\"POST\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-3\">\n              <label className=\" col-sm-3 col-form-label\">\n                Current Password\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Current Password\"\n                  name=\"cpassword\"\n                  value={userData.cpassword}\n                  onChange={handleInputs}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <label className=\" col-sm-3 col-form-label\">New Password</label>\n              <div className=\"col-sm-9\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"New Password\"\n                  name=\"npassword\"\n                  value={userData.npassword}\n                  onChange={handleInputs}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <label className=\" col-sm-3 col-form-label\">\n                Re-enter New Password\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Re-enter New Password\"\n                  name=\"rpassword\"\n                  value={userData.rpassword}\n                  onChange={handleInputs}\n                />\n              </div>\n            </div>\n          </div>\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick ={updatePassword}>\n            Save Changes\n          </button>\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\n            Cancel\n          </button>\n        </form>\n      </main>\n    </>\n  );\n}\n\nexport default ChangePassword;\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Home.js",[],"E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Applications.js",["161"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nfunction ApplicationStatus(props) {\r\n  if (props.status == \"BeingProcessed\") {\r\n    return (\r\n      <span className=\"badge bg-warning rounded-pill\">Being Processed</span>\r\n    );\r\n  } else if (props.status == \"Rejected\") {\r\n    return <span className=\"badge bg-danger rounded-pill\">Rejected</span>;\r\n  } else if (props.status == \"Selected\") {\r\n    return <span className=\"badge bg-success rounded-pill\">Selected</span>;\r\n  } else {\r\n    return <span className=\"badge bg-secondary rounded-pill\">Applied</span>;\r\n  }\r\n}\r\n\r\nfunction CurrentApplications() {\r\n  //backend for current applications\r\n  const [applicants, setApplicants] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    const res = await fetch(\"/studentJob\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n    setApplicants(data);\r\n    console.log(applicants);\r\n  };\r\n\r\n  const [applicant, setApplicant] = useState({\r\n    creatorName: \"\",\r\n    jobId: \"\",\r\n    title: \"\",\r\n    jobDescription: \"\",\r\n    name: \"\",\r\n    appliedDate: \"\",\r\n    applicationStatus: \"\",\r\n  });\r\n\r\n  const archive = async (\r\n    creatorName,\r\n    jobId,\r\n    title,\r\n    jobDescription,\r\n    name,\r\n    appliedDate,\r\n    applicationStatus\r\n  ) => {\r\n    setApplicant({\r\n      creatorName,\r\n      jobId,\r\n      title,\r\n      jobDescription,\r\n      name,\r\n      appliedDate,\r\n      applicationStatus,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"modal fade\"\r\n        data-bs-backdrop=\"static\"\r\n        data-bs-keyboard=\"false\"\r\n        id=\"studentViewApplication\"\r\n        tabIndex=\"-1\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">View Application</h5>\r\n              <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <label className=\"form-label\">Company Name</label>\r\n              <input\r\n                className=\"form-control mb-3\"\r\n                type=\"text\"\r\n                value={applicant.creatorName}\r\n                disabled\r\n              />\r\n              <label className=\"form-label\">Job ID</label>\r\n              <input\r\n                className=\"form-control mb-3\"\r\n                type=\"text\"\r\n                value={applicant.jobId}\r\n                disabled\r\n              />\r\n              <label className=\"form-label\">Job Title</label>\r\n              <input\r\n                className=\"form-control mb-3\"\r\n                type=\"text\"\r\n                value={applicant.title}\r\n                disabled\r\n              />\r\n              <label className=\"form-label\">Job Description</label>\r\n              <textarea\r\n                className=\"form-control mb-3\"\r\n                value={applicant.jobDescription}\r\n                disabled\r\n              />\r\n              <label className=\"form-label\">Student Name</label>\r\n              <input\r\n                className=\"form-control mb-3\"\r\n                type=\"text\"\r\n                value={applicant.name}\r\n                disabled\r\n              />\r\n              <label className=\"form-label\">Application Date</label>\r\n              <input\r\n                className=\"form-control mb-3\"\r\n                type=\"text\"\r\n                value={applicant.appliedDate}\r\n                disabled\r\n              />\r\n              <label className=\"form-label\">Application Status</label>\r\n              <div className=\"mb-3\">\r\n                <ApplicationStatus status={applicant.applicationStatus} />\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Name</th>\r\n            <th>Job ID</th>\r\n            <th>Job Title</th>\r\n            <th>Application Date</th>\r\n            <th>Application Status</th>\r\n            <th>View Application</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {applicants.map(\r\n            (\r\n              {\r\n                name,\r\n                creatorName,\r\n                jobId,\r\n                title,\r\n                appliedDate,\r\n                applicationStatus,\r\n                jobDescription,\r\n              },\r\n              id\r\n            ) => {\r\n              return (\r\n                <tr>\r\n                  <td>{id + 1}</td>\r\n                  <td>{creatorName}</td>\r\n                  <td>{jobId}</td>\r\n                  <td>{title}</td>\r\n                  <td>{appliedDate}</td>\r\n                  <td>\r\n                    <ApplicationStatus status={applicationStatus} />\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-outline-primary\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#studentViewApplication\"\r\n                      onClick={archive.bind(\r\n                        this,\r\n                        creatorName,\r\n                        jobId,\r\n                        title,\r\n                        jobDescription,\r\n                        name,\r\n                        appliedDate,\r\n                        applicationStatus\r\n                      )}\r\n                    >\r\n                      View Application\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Applications() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Applications</h2>\r\n          <hr />\r\n          <CurrentApplications />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Applications;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Profile.js",["162","163","164","165"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //back end \r\n\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  //update data functions\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone,address,department,portfolio,links}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone,address,department,portfolio,links\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n\r\n\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Middle Name (Optional)\"\r\n                  name=\"studentProfileMiddleName\"\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  name=\"studentProfileLastName\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-12\">\r\n                <label className=\"col-form-label\">Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Address\"\r\n                  name=\"address\"\r\n                  value={userData.address}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-5\">\r\n                <label className=\"col-form-label\">Department</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Department\"\r\n                  name=\"department\"\r\n                  value={userData.department}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-7\">\r\n                <label htmlFor=\"studentResume\" className=\"col-form-label\">\r\n                  Resume\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"file\"\r\n                  id=\"studentResume\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-4\">\r\n                <label\r\n                  htmlFor=\"studentProfilePortfolioLink\"\r\n                  className=\"col-form-label\"\r\n                >\r\n                  Portfolio Link\r\n                </label>\r\n                <input\r\n                  id=\"studentProfilePortfolioLink\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Portfolio Link\"\r\n                  name=\"portfolio\"\r\n                  onChange={handleInputs}\r\n                  value={userData.portfolio}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <label htmlFor=\"studentProfileLink\" className=\"col-form-label\">\r\n                  Link\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Link\"\r\n                  id=\"studentProfileLink\"\r\n                  name=\"links\"\r\n                  value={userData.links}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Home.js",[],"E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Notifications.js",["166","167"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for all notifications\r\n\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(({ date, title, message }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{date}</td>\r\n                <td>{title}</td>\r\n                <td>{message}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Profile.js",["168","169","170","171"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //back end \r\n\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  //update data functions\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Middle Name (Optional)\"\r\n                  name=\"adminProfileMiddleName\"\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  name=\"adminProfileLastName\"\r\n                  \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Home.js",[],"E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Applications.js",["172","173","174","175"],"E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Notifications.js",["176","177"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for all notifications\r\n\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(({ date, title, message }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{date}</td>\r\n                <td>{title}</td>\r\n                <td>{message}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Profile.js",["178","179","180","181"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //backend\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone,address,companyLink}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone,address,companyLink\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Company Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-8\">\r\n                <label className=\"col-form-label\">Company Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"Company Address\"\r\n                  name=\"address\"\r\n                  value={userData.address}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <label className=\"col-form-label\">Company Website</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"\"\r\n                  placeholder=\"Company Website\"\r\n                  name=\"companyLink\"\r\n                  value={userData.companyLink}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Company E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Company Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Openings.js",["182","183","184"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction CurrentOpenings() {\r\n  //back end\r\n  const [jobData, setJobData] = useState([]);\r\n  const history = useHistory();\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/jobopenings\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setJobData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n  //job archive back-end code\r\n  const archive = async (jobId,title)=>{\r\n    console.log(\"Inside Archive function\");\r\n    console.log(jobId);\r\n    console.log(title);\r\n\r\n    try{\r\n      const res = await fetch(\"/jobArchive\",{\r\n        method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            jobId,\r\n            title\r\n          })\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        if(res.status===202){\r\n          console.log(data.message);\r\n          window.alert(data.message);\r\n        }else{\r\n          console.log(data.message);\r\n          window.alert(data.message);\r\n        }\r\n    }catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Job ID</th>\r\n            <th>Job Title</th>\r\n            <th>Archive Job</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobData.map(({ jobId, title }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{jobId}</td>\r\n                <td>{title}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\" onClick={archive.bind(this,jobId, title)}>\r\n                    Archive Job\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllOpenings() {\r\n  //back end for all Openings\r\n\r\n  const [jobData, setJobData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/alljobopenings\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setJobData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Job ID</th>\r\n            <th>Job Title</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobData.map(({ jobId, title }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{jobId}</td>\r\n                <td>{title}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Openings() {\r\n  //back end\r\n\r\n  const history = useHistory();\r\n  const [job, setJob] = useState({\r\n    jobId: \"\",\r\n    title: \"\",\r\n    ctc: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    console.log(e.target.value);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setJob({ ...job, [name]: value });\r\n  };\r\n\r\n  const addJob = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { jobId, title, ctc,description } = job;\r\n\r\n    try {\r\n      const res = await fetch(\"/job\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          jobId,\r\n          title,\r\n          ctc,\r\n          description,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 201) {\r\n        console.log(\"Job created successfully\");\r\n        window.alert(\"Job created successfully\");\r\n        history.push(\"/Company/Openings\");\r\n      } else {\r\n        console.log(\"Job Id already exists\");\r\n        window.alert(\"Job Id already exists\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div\r\n          className=\"modal fade\"\r\n          data-bs-backdrop=\"static\"\r\n          data-bs-keyboard=\"false\"\r\n          id=\"companyCreateOpening\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Create Opening</h5>\r\n                <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n              </div>\r\n              <form method=\"POST\">\r\n                <div className=\"modal-body\">\r\n                  <label className=\"form-label\" htmlFor=\"companyJobId\">\r\n                    Job Id\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"companyJobId\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job ID\"\r\n                      name=\"jobId\"\r\n                      value={job.jobId}\r\n                      onChange={handleInputs}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <label className=\"form-label\" htmlFor=\"companyJobTitle\">\r\n                    Job Title\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"companyJobTitle\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job Title\"\r\n                      name=\"title\"\r\n                      value={job.title}\r\n                      onChange={handleInputs}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <label className=\"form-label\" htmlFor=\"companyJobDescription\">\r\n                    Job Description\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <textarea\r\n                      id=\"companyJobDescription\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job Description\"\r\n                      name=\"description\"\r\n                      value={job.description}\r\n                      onChange={handleInputs}\r\n                      rows=\"4\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"companyFileInputs\" className=\"form-label\">\r\n                      Attach Files\r\n                    </label>\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"file\"\r\n                      id=\"companyFileInputs\"\r\n                      multiple\r\n                    />\r\n                  </div>\r\n                  <label className=\"form-label\" htmlFor=\"companyCTCOffered\">\r\n                    CTC Offered\r\n                  </label>\r\n                  <input\r\n                    id=\"companyCTCOffered\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"CTC Offered\"\r\n                    name=\"ctc\"\r\n                    value={job.ctc}\r\n                    onChange={handleInputs}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    type=\"Submit\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={addJob}\r\n                  >\r\n                    Add Job\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Openings</h2>\r\n          <hr />\r\n          <Link>\r\n            <button\r\n              className=\"btn btn-primary rounded-pill\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#companyCreateOpening\"\r\n            >\r\n              Create Opening\r\n            </button>\r\n          </Link>\r\n          <h3 className=\"text-center\">Current Openings</h3>\r\n          <CurrentOpenings />\r\n          <h3 className=\"text-center\">All Openings</h3>\r\n          <AllOpenings />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Openings;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Profile.js",["185","186","187","188"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //back end for placement profile\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone,address,department}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone,address,department\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Middle Name (Optional)\"\r\n                  name=\"placementCoordinatorProfileMiddleName\"\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  name=\"placementCoordinatorProfileLastName\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-12\">\r\n                <label className=\"col-form-label\">Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Address\"\r\n                  name=\"address\"\r\n                  value={userData.address}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Department</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Department\"\r\n                  name=\"department\"\r\n                  value={userData.department}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Openings.js",["189","190","191"],"E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\ChangePassword.js",["192","193","194","195"],"E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\ChangePassword.js",["196","197","198","199"],"import React, { useEffect,useState } from \"react\";\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\nimport Header from \"./Header\";\n\nfunction ChangePassword() {\n\n  //backend\n\n  const [userData,setUserData] = useState({\n    cpassword:\"\",\n    npassword:\"\",\n    rpassword:\"\",\n  });\n  const history = useHistory();\n\n  let name,value;\n  const handleInputs = (e) =>{\n      //console.log(e.target.value);\n      name = e.target.name;\n      value=e.target.value;\n\n      setUserData({...userData,[name]:value});\n  }\n\n  const updatePassword = async (e) =>{\n\n    e.preventDefault();\n\n    console.log(userData);\n    const {cpassword,npassword,rpassword} = userData;\n\n    try{\n\n      const res = await fetch(\"/updatePassword\",{\n        method:\"POST\",\n        headers:{\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cpassword,npassword,rpassword\n        })\n      });\n\n      const data = await res.json();\n\n      if (res.status ===202){\n        console.log(data.message);\n        window.alert(data.message);\n      }else{\n        console.log(data.message);\n        window.alert(data.message);\n      }\n    }catch(e){\n      console.log(e);\n    }\n\n  }\n\n  return (\n    <>\n      <Header />\n      <main id=\"main\">\n        <h2 id=\"webpageTitle\" className=\"text-center\">\n          Change Password\n        </h2>\n        <hr />\n        <form action=\"\" method=\"POST\">\n          <div className=\"container-fluid\">\n            <div className=\"row mb-3\">\n              <label className=\" col-sm-3 col-form-label\">\n                Current Password\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Current Password\"\n                  name=\"cpassword\"\n                  value={userData.cpassword}\n                  onChange={handleInputs}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <label className=\" col-sm-3 col-form-label\">New Password</label>\n              <div className=\"col-sm-9\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"New Password\"\n                  name=\"npassword\"\n                  value={userData.npassword}\n                  onChange={handleInputs}\n                />\n              </div>\n            </div>\n            <div className=\"row mb-3\">\n              <label className=\" col-sm-3 col-form-label\">\n                Re-enter New Password\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Re-enter New Password\"\n                  name=\"rpassword\"\n                  value={userData.rpassword}\n                  onChange={handleInputs}\n                />\n              </div>\n            </div>\n          </div>\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updatePassword}>\n            Save Changes\n          </button>\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\n            Cancel\n          </button>\n        </form>\n      </main>\n    </>\n  );\n}\n\nexport default ChangePassword;\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ManageUsers.js",["200","201","202","203","204"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useParams } from \"react-router-dom\";\r\nimport \"../../css/ManageUsers.css\";\r\nimport Header from \"./Header\";\r\n\r\nfunction PendingCompanies() {\r\n  //backend for pending Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/newUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Company\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const approve = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Companies Approve Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Company\";\r\n\r\n    try{\r\n      const res = await fetch(\"/verifyUser\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const deleteUser = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Company\";\r\n\r\n    try{\r\n      const res = await fetch(\"/deleteUsers\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        Pending Companies\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Username</th>\r\n            <th>Company Name</th>\r\n            <th>Company E-mail</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, email, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-success\"\r\n                    onClick={approve.bind(this,userName,name)}\r\n                  >Approve</button>\r\n                </td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this,userName,name)}\r\n                  >Delete</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllCompanies() {\r\n  \r\n  //backend for all Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/verifyUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Company\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //delete company\r\n  const deleteUser = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Company\";\r\n\r\n    try{\r\n      const res = await fetch(\"/deleteUsers\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        All Companies\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Username</th>\r\n            <th>Company Name</th>\r\n            <th>Company E-mail</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, email, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this,userName,name)}\r\n                  >Delete</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction PendingStudents() {\r\n  //backend for pending Students\r\n  const [studentdata, setStudentData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/newUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Student\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setStudentData(data);\r\n\r\n      console.log(studentdata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const approve = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Students Approve Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Student\";\r\n\r\n    try{\r\n      const res = await fetch(\"/verifyUser\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const deleteUser = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Students Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Student\";\r\n\r\n    try{\r\n      const res = await fetch(\"/deleteUsers\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        Pending Students\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Student Username</th>\r\n            <th>Student Name</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentdata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-success\" \r\n                  onClick = {approve.bind(this,userName,name)}>\r\n                    Approve</button>\r\n                </td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this,userName,name)}\r\n                  >Delete</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllStudents() {\r\n\r\n  //backend for all Students\r\n  const [studentdata, setStudentData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/verifyUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Student\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setStudentData(data);\r\n\r\n      console.log(studentdata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //backend Code for delete Students\r\n  const deleteUser = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Students Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Student\";\r\n\r\n    try{\r\n      const res = await fetch(\"/deleteUsers\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        All Students\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Student UserName</th>\r\n            <th>Student Name</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentdata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this,userName,name)}\r\n                  >Delete</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ManageUsers() {\r\n  let { slug } = useParams();\r\n  let [userType, setUserType] = useState(slug);\r\n  useEffect(() => {\r\n    document\r\n      .getElementsByClassName(\"dropdown-toggle\")[0]\r\n      .classList.add(\"active\");\r\n  }, [slug]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Manage {userType}\r\n        </h2>\r\n        <hr />\r\n        <div id=\"manageUsersContainer\">\r\n          <nav className=\"nav nav-tabs nav-fill\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to=\"/PlacementCoordinator/ManageUsers/Companies\"\r\n              onClick={() => setUserType(\"Companies\")}\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#ManageCompanies\"\r\n            >\r\n              Companies\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to=\"/PlacementCoordinator/ManageUsers/Students\"\r\n              onClick={() => setUserType(\"Students\")}\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#ManageStudents\"\r\n            >\r\n              Students\r\n            </NavLink>\r\n          </nav>\r\n          <div className=\"tab-content\">\r\n            <div className=\"tab-pane fade show active\" id=\"ManageCompanies\">\r\n              <PendingCompanies />\r\n              <AllCompanies />\r\n            </div>\r\n            <div className=\"tab-pane fade\" id=\"ManageStudents\">\r\n              <PendingStudents />\r\n              <AllStudents />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManageUsers;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ManageUsers.js",["205","206","207","208","209","210","211"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useParams } from \"react-router-dom\";\r\nimport \"../../css/ManageUsers.css\";\r\nimport Header from \"./Header\";\r\n\r\nfunction PendingPlacementCoordinators() {\r\n  //backend for pending Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/newUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Placement Coordinator\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const approve = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Companies Approve Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Placement Coordinator\";\r\n\r\n    try{\r\n      const res = await fetch(\"/verifyUser\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const deleteUser = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Placement Coordinator\";\r\n\r\n    try{\r\n      const res = await fetch(\"/deleteUsers\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        Pending Placement Coordinators\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Placement Coordinator Username</th>\r\n            <th>Placement Coordinator Name</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-success\"\r\n                    onClick={approve.bind(this,userName,name)}\r\n                  >Approve</button>\r\n                </td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this,userName,name)}\r\n                  >Delete</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllPlacementCoordinators() {\r\n\r\n  //backend for pending Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/verifyUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Placement Coordinator\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Placement Coordinator\";\r\n\r\n    try{\r\n      const res = await fetch(\"/deleteUsers\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        All Placement Coordinators\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Placement Coordinator Username</th>\r\n            <th>Placement Coordinator Name</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this,userName,name)}\r\n                  >Delete</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction PendingCompanies() {\r\n  //backend for pending Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/newUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Company\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const approve = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Companies Approve Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Company\";\r\n\r\n    try{\r\n      const res = await fetch(\"/verifyUser\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const deleteUser = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Company\";\r\n\r\n    try{\r\n      const res = await fetch(\"/deleteUsers\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        Pending Companies\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Username</th>\r\n            <th>Company Name</th>\r\n            <th>Company E-mail</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, email, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-success\"\r\n                    onClick={approve.bind(this,userName,name)}\r\n                  >Approve</button>\r\n                </td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this,userName,name)}\r\n                  >Delete</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllCompanies() {\r\n  //backend for pending Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/verifyUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Company\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Company\";\r\n\r\n    try{\r\n      const res = await fetch(\"/deleteUsers\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        All Companies\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Username</th>\r\n            <th>Company Name</th>\r\n            <th>Company E-mail</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, email, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this,userName,name)}\r\n                  >Delete</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction PendingStudents() {\r\n  //backend for pending Students\r\n  const [studentdata, setStudentData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/newUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Student\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setStudentData(data);\r\n\r\n      console.log(studentdata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const approve = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Students Approve Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Student\";\r\n\r\n    try{\r\n      const res = await fetch(\"/verifyUser\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const deleteUser = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Students Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Student\";\r\n\r\n    try{\r\n      const res = await fetch(\"/deleteUsers\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        Pending Students\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Student Enrollment Number</th>\r\n            <th>Student Name</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentdata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-success\"\r\n                    onClick = {approve.bind(this,userName,name)}\r\n                  >Approve</button>\r\n                </td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this,userName,name)}\r\n                  >Delete</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllStudents() {\r\n\r\n  //backend for pending Students\r\n  const [studentdata, setStudentData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/verifyUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Student\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setStudentData(data);\r\n\r\n      console.log(studentdata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  //backend Code for delete Students\r\n  const deleteUser = async (userName,name)=>{\r\n    //console.log(\"Inside Pending Students Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user=\"Student\";\r\n\r\n    try{\r\n      const res = await fetch(\"/deleteUsers\",{\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,userName,name\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        All Students\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Student Enrollment Number</th>\r\n            <th>Student Name</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentdata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this,userName,name)}\r\n                  >Delete</button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ManageUsers() {\r\n  let { slug } = useParams();\r\n  let [userType, setUserType] = useState(slug);\r\n  useEffect(() => {\r\n    document\r\n      .getElementsByClassName(\"dropdown-toggle\")[0]\r\n      .classList.add(\"active\");\r\n    if (slug === \"PlacementCoordinators\") {\r\n      setUserType(\"Placement Coordinators\");\r\n    } else {\r\n      setUserType(slug);\r\n    }\r\n  }, [slug]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Manage {userType}\r\n        </h2>\r\n        <hr />\r\n        <div id=\"manageUsersContainer\">\r\n          <nav className=\"nav nav-tabs nav-fill\">\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to=\"/Admin/ManageUsers/PlacementCoordinators\"\r\n              onClick={() => setUserType(\"PlacementCoordinators\")}\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#ManagePlacementCoordinators\"\r\n            >\r\n              Placement Coordinators\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to=\"/Admin/ManageUsers/Companies\"\r\n              onClick={() => setUserType(\"Companies\")}\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#ManageCompanies\"\r\n            >\r\n              Companies\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"nav-link\"\r\n              to=\"/Admin/ManageUsers/Students\"\r\n              onClick={() => setUserType(\"Students\")}\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#ManageStudents\"\r\n            >\r\n              Students\r\n            </NavLink>\r\n          </nav>\r\n          <div className=\"tab-content\">\r\n            <div\r\n              className=\"tab-pane fade show active\"\r\n              id=\"ManagePlacementCoordinators\"\r\n            >\r\n              <PendingPlacementCoordinators />\r\n              <AllPlacementCoordinators />\r\n            </div>\r\n            <div className=\"tab-pane fade\" id=\"ManageCompanies\">\r\n              <PendingCompanies />\r\n              <AllCompanies />\r\n            </div>\r\n            <div className=\"tab-pane fade\" id=\"ManageStudents\">\r\n              <PendingStudents />\r\n              <AllStudents />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManageUsers;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Header.js",["212","213","214","215"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink,useHistory } from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  let [username, setUsername] = useState(props.username);\r\n\r\n  //back end\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"dropdown-toggle\")[0].style.userSelect =\r\n      \"None\";\r\n    document.getElementsByClassName(\"dropdown-toggle\")[1].style.userSelect =\r\n      \"None\";\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/Admin/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#adminNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"adminNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Admin/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li class=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    Manage Users\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Admin/ManageUsers/PlacementCoordinators\"\r\n                    >\r\n                      Manage Placement Coordinators\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Admin/ManageUsers/Companies\"\r\n                    >\r\n                      Manage Companies\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Admin/ManageUsers/Students\"\r\n                    >\r\n                      Manage Students\r\n                    </NavLink>\r\n                  </div>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Admin/Notifications\">\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink className=\"dropdown-item\" to=\"/Admin/Profile\">\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Admin/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{username}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Header.js",["216","217","218","219"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink,useHistory } from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  let [username, setUsername] = useState(props.username);\r\n\r\n  //backend\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"dropdown-toggle\")[0].style.userSelect =\r\n      \"None\";\r\n    document.getElementsByClassName(\"dropdown-toggle\")[1].style.userSelect =\r\n      \"None\";\r\n\r\n    callAboutPage();\r\n\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/PlacementCoordinator/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#placementCoordinatorNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div\r\n              id=\"placementCoordinatorNavbarMenu\"\r\n              className=\"collapse navbar-collapse\"\r\n            >\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/PlacementCoordinator/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    Manage Users\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/PlacementCoordinator/ManageUsers/Companies\"\r\n                    >\r\n                      Manage Companies\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/PlacementCoordinator/ManageUsers/Students\"\r\n                    >\r\n                      Manage Students\r\n                    </NavLink>\r\n                  </div>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"/PlacementCoordinator/Notifications\"\r\n                  >\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/PlacementCoordinator/Profile\"\r\n                    >\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/PlacementCoordinator/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{username}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Header.js",["220","221","222"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink,useHistory } from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  let [username, setUsername] = useState(props.username);\r\n\r\n  //backend\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"dropdown-toggle\")[0].style.userSelect =\r\n      \"None\";\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/Company/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#companyNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"companyNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Applications\">\r\n                    Applications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Openings\">\r\n                    Openings\r\n                  </NavLink>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Notifications\">\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink className=\"dropdown-item\" to=\"/Company/Profile\">\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Company/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{username}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","E:\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Header.js",["223","224","225"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  let [username, setUsername] = useState(props.username);\r\n\r\n  //back end \r\n\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"dropdown-toggle\")[0].style.userSelect =\r\n      \"None\";\r\n      callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/Student/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#studentNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"studentNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Applications\">\r\n                    Applications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Openings\">\r\n                    Openings\r\n                  </NavLink>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Notifications\">\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink className=\"dropdown-item\" to=\"/Student/Profile\">\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Student/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{username}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n",{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":95,"column":9,"nodeType":"232","messageId":"233","endLine":95,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":158,"column":20,"nodeType":"236","messageId":"237","endLine":158,"endColumn":22},{"ruleId":"234","severity":1,"message":"235","line":160,"column":27,"nodeType":"236","messageId":"237","endLine":160,"endColumn":29},{"ruleId":"234","severity":1,"message":"235","line":162,"column":27,"nodeType":"236","messageId":"237","endLine":162,"endColumn":29},{"ruleId":"234","severity":1,"message":"235","line":164,"column":27,"nodeType":"236","messageId":"237","endLine":164,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":52,"column":6,"nodeType":"240","endLine":52,"endColumn":8,"suggestions":"241"},{"ruleId":"230","severity":1,"message":"242","line":138,"column":13,"nodeType":"232","messageId":"233","endLine":138,"endColumn":18},{"ruleId":"230","severity":1,"message":"243","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"245","line":2,"column":16,"nodeType":"232","messageId":"233","endLine":2,"endColumn":23},{"ruleId":"230","severity":1,"message":"246","line":14,"column":9,"nodeType":"232","messageId":"233","endLine":14,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":50,"column":6,"nodeType":"240","endLine":50,"endColumn":8,"suggestions":"247"},{"ruleId":"230","severity":1,"message":"242","line":134,"column":13,"nodeType":"232","messageId":"233","endLine":134,"endColumn":18},{"ruleId":"230","severity":1,"message":"243","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"245","line":2,"column":16,"nodeType":"232","messageId":"233","endLine":2,"endColumn":23},{"ruleId":"230","severity":1,"message":"246","line":14,"column":9,"nodeType":"232","messageId":"233","endLine":14,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":28,"column":6,"nodeType":"240","endLine":28,"endColumn":8,"suggestions":"248"},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"245","line":2,"column":16,"nodeType":"232","messageId":"233","endLine":2,"endColumn":23},{"ruleId":"230","severity":1,"message":"249","line":69,"column":13,"nodeType":"232","messageId":"233","endLine":69,"endColumn":17},{"ruleId":"238","severity":1,"message":"239","line":86,"column":5,"nodeType":"240","endLine":86,"endColumn":7,"suggestions":"250"},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"239","line":38,"column":6,"nodeType":"240","endLine":38,"endColumn":8,"suggestions":"251"},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"245","line":2,"column":16,"nodeType":"232","messageId":"233","endLine":2,"endColumn":23},{"ruleId":"230","severity":1,"message":"249","line":69,"column":13,"nodeType":"232","messageId":"233","endLine":69,"endColumn":17},{"ruleId":"238","severity":1,"message":"239","line":86,"column":5,"nodeType":"240","endLine":86,"endColumn":7,"suggestions":"252"},{"ruleId":"234","severity":1,"message":"235","line":5,"column":20,"nodeType":"236","messageId":"237","endLine":5,"endColumn":22},{"ruleId":"234","severity":1,"message":"235","line":9,"column":27,"nodeType":"236","messageId":"237","endLine":9,"endColumn":29},{"ruleId":"234","severity":1,"message":"235","line":11,"column":27,"nodeType":"236","messageId":"237","endLine":11,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":127,"column":6,"nodeType":"240","endLine":127,"endColumn":8,"suggestions":"253"},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"239","line":38,"column":6,"nodeType":"240","endLine":38,"endColumn":8,"suggestions":"254"},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"245","line":2,"column":16,"nodeType":"232","messageId":"233","endLine":2,"endColumn":23},{"ruleId":"230","severity":1,"message":"249","line":66,"column":13,"nodeType":"232","messageId":"233","endLine":66,"endColumn":17},{"ruleId":"238","severity":1,"message":"239","line":83,"column":5,"nodeType":"240","endLine":83,"endColumn":7,"suggestions":"255"},{"ruleId":"238","severity":1,"message":"239","line":67,"column":6,"nodeType":"240","endLine":67,"endColumn":8,"suggestions":"256"},{"ruleId":"238","severity":1,"message":"239","line":134,"column":6,"nodeType":"240","endLine":134,"endColumn":8,"suggestions":"257"},{"ruleId":"230","severity":1,"message":"249","line":200,"column":13,"nodeType":"232","messageId":"233","endLine":200,"endColumn":17},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"245","line":2,"column":16,"nodeType":"232","messageId":"233","endLine":2,"endColumn":23},{"ruleId":"230","severity":1,"message":"249","line":67,"column":13,"nodeType":"232","messageId":"233","endLine":67,"endColumn":17},{"ruleId":"238","severity":1,"message":"239","line":84,"column":5,"nodeType":"240","endLine":84,"endColumn":7,"suggestions":"258"},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"259","line":132,"column":7,"nodeType":"232","messageId":"233","endLine":132,"endColumn":11},{"ruleId":"238","severity":1,"message":"260","line":153,"column":6,"nodeType":"240","endLine":153,"endColumn":8,"suggestions":"261"},{"ruleId":"230","severity":1,"message":"243","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"245","line":2,"column":16,"nodeType":"232","messageId":"233","endLine":2,"endColumn":23},{"ruleId":"230","severity":1,"message":"246","line":14,"column":9,"nodeType":"232","messageId":"233","endLine":14,"endColumn":16},{"ruleId":"230","severity":1,"message":"243","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"245","line":2,"column":16,"nodeType":"232","messageId":"233","endLine":2,"endColumn":23},{"ruleId":"230","severity":1,"message":"246","line":14,"column":9,"nodeType":"232","messageId":"233","endLine":14,"endColumn":16},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"239","line":96,"column":6,"nodeType":"240","endLine":96,"endColumn":8,"suggestions":"262"},{"ruleId":"238","severity":1,"message":"239","line":202,"column":6,"nodeType":"240","endLine":202,"endColumn":8,"suggestions":"263"},{"ruleId":"238","severity":1,"message":"239","line":332,"column":6,"nodeType":"240","endLine":332,"endColumn":8,"suggestions":"264"},{"ruleId":"238","severity":1,"message":"239","line":437,"column":6,"nodeType":"240","endLine":437,"endColumn":8,"suggestions":"265"},{"ruleId":"230","severity":1,"message":"244","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"238","severity":1,"message":"239","line":96,"column":6,"nodeType":"240","endLine":96,"endColumn":8,"suggestions":"266"},{"ruleId":"238","severity":1,"message":"239","line":199,"column":6,"nodeType":"240","endLine":199,"endColumn":8,"suggestions":"267"},{"ruleId":"238","severity":1,"message":"239","line":326,"column":6,"nodeType":"240","endLine":326,"endColumn":8,"suggestions":"268"},{"ruleId":"238","severity":1,"message":"239","line":430,"column":6,"nodeType":"240","endLine":430,"endColumn":8,"suggestions":"269"},{"ruleId":"238","severity":1,"message":"239","line":562,"column":6,"nodeType":"240","endLine":562,"endColumn":8,"suggestions":"270"},{"ruleId":"238","severity":1,"message":"239","line":667,"column":6,"nodeType":"240","endLine":667,"endColumn":8,"suggestions":"271"},{"ruleId":"230","severity":1,"message":"272","line":7,"column":18,"nodeType":"232","messageId":"233","endLine":7,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":49,"column":6,"nodeType":"240","endLine":49,"endColumn":8,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":83,"column":19,"nodeType":"276","endLine":87,"endColumn":20},{"ruleId":"274","severity":1,"message":"275","line":117,"column":19,"nodeType":"276","endLine":121,"endColumn":20},{"ruleId":"230","severity":1,"message":"272","line":7,"column":18,"nodeType":"232","messageId":"233","endLine":7,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":51,"column":6,"nodeType":"240","endLine":51,"endColumn":8,"suggestions":"277"},{"ruleId":"274","severity":1,"message":"275","line":88,"column":19,"nodeType":"276","endLine":92,"endColumn":20},{"ruleId":"274","severity":1,"message":"275","line":119,"column":19,"nodeType":"276","endLine":123,"endColumn":20},{"ruleId":"230","severity":1,"message":"272","line":7,"column":18,"nodeType":"232","messageId":"233","endLine":7,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":47,"column":6,"nodeType":"240","endLine":47,"endColumn":8,"suggestions":"278"},{"ruleId":"274","severity":1,"message":"275","line":97,"column":19,"nodeType":"276","endLine":101,"endColumn":20},{"ruleId":"230","severity":1,"message":"272","line":7,"column":18,"nodeType":"232","messageId":"233","endLine":7,"endColumn":29},{"ruleId":"238","severity":1,"message":"239","line":49,"column":6,"nodeType":"240","endLine":49,"endColumn":8,"suggestions":"279"},{"ruleId":"274","severity":1,"message":"275","line":99,"column":19,"nodeType":"276","endLine":103,"endColumn":20},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"no-unused-vars","'random' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callAboutPage'. Either include it or remove the dependency array.","ArrayExpression",["282"],"'resdt' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'history' is assigned a value but never used.",["283"],["284"],"'data' is assigned a value but never used.",["285"],["286"],["287"],["288"],["289"],["290"],["291"],["292"],["293"],"'name' is defined but never used.","React Hook useEffect has missing dependencies: 'callAboutPage' and 'callAboutPage1'. Either include them or remove the dependency array.",["294"],["295"],["296"],["297"],["298"],["299"],["300"],["301"],["302"],["303"],["304"],"'setUsername' is assigned a value but never used.",["305"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["306"],["307"],["308"],"no-global-assign","no-unsafe-negation",{"desc":"309","fix":"310"},{"desc":"309","fix":"311"},{"desc":"309","fix":"312"},{"desc":"309","fix":"313"},{"desc":"309","fix":"314"},{"desc":"309","fix":"315"},{"desc":"309","fix":"316"},{"desc":"309","fix":"317"},{"desc":"309","fix":"318"},{"desc":"309","fix":"319"},{"desc":"309","fix":"320"},{"desc":"309","fix":"321"},{"desc":"322","fix":"323"},{"desc":"309","fix":"324"},{"desc":"309","fix":"325"},{"desc":"309","fix":"326"},{"desc":"309","fix":"327"},{"desc":"309","fix":"328"},{"desc":"309","fix":"329"},{"desc":"309","fix":"330"},{"desc":"309","fix":"331"},{"desc":"309","fix":"332"},{"desc":"309","fix":"333"},{"desc":"309","fix":"334"},{"desc":"309","fix":"335"},{"desc":"309","fix":"336"},{"desc":"309","fix":"337"},"Update the dependencies array to be: [callAboutPage]",{"range":"338","text":"339"},{"range":"340","text":"339"},{"range":"341","text":"339"},{"range":"342","text":"339"},{"range":"343","text":"339"},{"range":"344","text":"339"},{"range":"345","text":"339"},{"range":"346","text":"339"},{"range":"347","text":"339"},{"range":"348","text":"339"},{"range":"349","text":"339"},{"range":"350","text":"339"},"Update the dependencies array to be: [callAboutPage, callAboutPage1]",{"range":"351","text":"352"},{"range":"353","text":"339"},{"range":"354","text":"339"},{"range":"355","text":"339"},{"range":"356","text":"339"},{"range":"357","text":"339"},{"range":"358","text":"339"},{"range":"359","text":"339"},{"range":"360","text":"339"},{"range":"361","text":"339"},{"range":"362","text":"339"},{"range":"363","text":"339"},{"range":"364","text":"339"},{"range":"365","text":"339"},{"range":"366","text":"339"},[1221,1223],"[callAboutPage]",[1135,1137],[646,648],[1941,1943],[926,928],[1871,1873],[3209,3211],[926,928],[1878,1880],[1637,1639],[3183,3185],[1901,1903],[3646,3648],"[callAboutPage, callAboutPage1]",[2254,2256],[4836,4838],[7875,7877],[10396,10398],[2308,2310],[4875,4877],[7881,7883],[10443,10445],[13488,13490],[16020,16022],[1219,1221],[1222,1224],[1125,1127],[1133,1135]]