[{"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\Home.js":"3","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Home.js":"4","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ChangePassword.js":"5","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ManageUsers.js":"6","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Profile.js":"7","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Home.js":"8","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Home.js":"9","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ChangePassword.js":"10","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Profile.js":"11","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Notifications.js":"12","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Home.js":"13","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Openings.js":"14","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\ChangePassword.js":"15","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Profile.js":"16","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Applications.js":"17","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ManageUsers.js":"18","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Profile.js":"19","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Notifications.js":"20","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\ChangePassword.js":"21","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Notifications.js":"22","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Applications.js":"23","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Notifications.js":"24","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Openings.js":"25","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\Authenticator.js":"26","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Header.js":"27","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Header.js":"28","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Header.js":"29","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Header.js":"30"},{"size":299,"mtime":1619807468940,"results":"31","hashOfConfig":"32"},{"size":4474,"mtime":1620755436962,"results":"33","hashOfConfig":"32"},{"size":2350,"mtime":1619807468951,"results":"34","hashOfConfig":"32"},{"size":918,"mtime":1620755190862,"results":"35","hashOfConfig":"32"},{"size":3669,"mtime":1620897471585,"results":"36","hashOfConfig":"32"},{"size":19776,"mtime":1620755701266,"results":"37","hashOfConfig":"32"},{"size":4424,"mtime":1619807468955,"results":"38","hashOfConfig":"32"},{"size":913,"mtime":1620756516535,"results":"39","hashOfConfig":"32"},{"size":1006,"mtime":1620756641872,"results":"40","hashOfConfig":"32"},{"size":3669,"mtime":1620898025251,"results":"41","hashOfConfig":"32"},{"size":5477,"mtime":1619807468966,"results":"42","hashOfConfig":"32"},{"size":1836,"mtime":1619974939144,"results":"43","hashOfConfig":"32"},{"size":1011,"mtime":1620756761977,"results":"44","hashOfConfig":"32"},{"size":9119,"mtime":1620898112973,"results":"45","hashOfConfig":"32"},{"size":3455,"mtime":1620206988908,"results":"46","hashOfConfig":"32"},{"size":4973,"mtime":1619807468961,"results":"47","hashOfConfig":"32"},{"size":9321,"mtime":1620757887966,"results":"48","hashOfConfig":"32"},{"size":13518,"mtime":1620756152510,"results":"49","hashOfConfig":"32"},{"size":6894,"mtime":1620753602717,"results":"50","hashOfConfig":"32"},{"size":1849,"mtime":1619976146436,"results":"51","hashOfConfig":"32"},{"size":3453,"mtime":1620206988913,"results":"52","hashOfConfig":"32"},{"size":8921,"mtime":1620756392664,"results":"53","hashOfConfig":"32"},{"size":14537,"mtime":1620898792946,"results":"54","hashOfConfig":"32"},{"size":8159,"mtime":1620756400416,"results":"55","hashOfConfig":"32"},{"size":8952,"mtime":1620758306992,"results":"56","hashOfConfig":"32"},{"size":11908,"mtime":1620753976379,"results":"57","hashOfConfig":"32"},{"size":3632,"mtime":1620755303952,"results":"58","hashOfConfig":"32"},{"size":3940,"mtime":1620756604192,"results":"59","hashOfConfig":"32"},{"size":3943,"mtime":1620756724670,"results":"60","hashOfConfig":"32"},{"size":3985,"mtime":1620756547399,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"kzxzr9",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"64"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"64"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"64"},"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\index.js",[],["146","147"],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\App.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\Home.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Home.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ChangePassword.js",["148","149","150","151"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction ChangePassword() {\r\n  //backend\r\n\r\n  const [userData, setUserData] = useState({\r\n    cpassword: \"\",\r\n    npassword: \"\",\r\n    rpassword: \"\",\r\n  });\r\n  const history = useHistory();\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    //console.log(e.target.value);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setUserData({ ...userData, [name]: value });\r\n  };\r\n\r\n  const updatePassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(userData);\r\n    const { cpassword, npassword, rpassword } = userData;\r\n\r\n    try {\r\n      const res = await fetch(\"/updatePassword\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          cpassword,\r\n          npassword,\r\n          rpassword,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n        setUserData({ cpassword: \"\", npassword: \"\", rpassword: \"\" });\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Change Password\r\n        </h2>\r\n        <hr />\r\n        <form action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Current Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  placeholder=\"Current Password\"\r\n                  name=\"cpassword\"\r\n                  value={userData.cpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">New Password</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  placeholder=\"New Password\"\r\n                  name=\"npassword\"\r\n                  value={userData.npassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Re-enter New Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  placeholder=\"Re-enter New Password\"\r\n                  name=\"rpassword\"\r\n                  value={userData.rpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary float-end\"\r\n            type=\"submit\"\r\n            onClick={updatePassword}\r\n          >\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\ManageUsers.js",["152","153","154","155","156","157","158","159","160","161","162","163"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useParams } from \"react-router-dom\";\r\nimport \"../../css/ManageUsers.css\";\r\nimport Header from \"./Header\";\r\n\r\nfunction PendingPlacementCoordinators() {\r\n  //backend for pending Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/newUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Placement Coordinator\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const approve = async (userName, name) => {\r\n    //console.log(\"Inside Pending Companies Approve Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Placement Coordinator\";\r\n\r\n    try {\r\n      const res = await fetch(\"/verifyUser\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userName, name) => {\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Placement Coordinator\";\r\n\r\n    try {\r\n      const res = await fetch(\"/deleteUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        Pending Placement Coordinators\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Placement Coordinator Username</th>\r\n            <th>Placement Coordinator Name</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-success\"\r\n                    onClick={approve.bind(this, userName, name)}\r\n                  >\r\n                    Approve\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this, userName, name)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllPlacementCoordinators() {\r\n  //backend for pending Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/verifyUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Placement Coordinator\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userName, name) => {\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Placement Coordinator\";\r\n\r\n    try {\r\n      const res = await fetch(\"/deleteUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        All Placement Coordinators\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Placement Coordinator Username</th>\r\n            <th>Placement Coordinator Name</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this, userName, name)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction PendingCompanies() {\r\n  //backend for pending Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/newUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Company\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const approve = async (userName, name) => {\r\n    //console.log(\"Inside Pending Companies Approve Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Company\";\r\n\r\n    try {\r\n      const res = await fetch(\"/verifyUser\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userName, name) => {\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Company\";\r\n\r\n    try {\r\n      const res = await fetch(\"/deleteUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        Pending Companies\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Username</th>\r\n            <th>Company Name</th>\r\n            <th>Company E-mail</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, email, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-success\"\r\n                    onClick={approve.bind(this, userName, name)}\r\n                  >\r\n                    Approve\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this, userName, name)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllCompanies() {\r\n  //backend for pending Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/verifyUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Company\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userName, name) => {\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Company\";\r\n\r\n    try {\r\n      const res = await fetch(\"/deleteUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        All Companies\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Username</th>\r\n            <th>Company Name</th>\r\n            <th>Company E-mail</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, email, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this, userName, name)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction PendingStudents() {\r\n  //backend for pending Students\r\n  const [studentdata, setStudentData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/newUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Student\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setStudentData(data);\r\n\r\n      console.log(studentdata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const approve = async (userName, name) => {\r\n    //console.log(\"Inside Pending Students Approve Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Student\";\r\n\r\n    try {\r\n      const res = await fetch(\"/verifyUser\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userName, name) => {\r\n    //console.log(\"Inside Pending Students Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Student\";\r\n\r\n    try {\r\n      const res = await fetch(\"/deleteUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        Pending Students\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Student Enrollment Number</th>\r\n            <th>Student Name</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentdata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-success\"\r\n                    onClick={approve.bind(this, userName, name)}\r\n                  >\r\n                    Approve\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this, userName, name)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllStudents() {\r\n  //backend for pending Students\r\n  const [studentdata, setStudentData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/verifyUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Student\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setStudentData(data);\r\n\r\n      console.log(studentdata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //backend Code for delete Students\r\n  const deleteUser = async (userName, name) => {\r\n    //console.log(\"Inside Pending Students Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Student\";\r\n\r\n    try {\r\n      const res = await fetch(\"/deleteUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        All Students\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Student Enrollment Number</th>\r\n            <th>Student Name</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentdata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this, userName, name)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ManageUsers() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Manage Users\r\n        </h2>\r\n        <hr />\r\n        <div id=\"manageUsersContainer\">\r\n          <nav className=\"nav nav-tabs nav-fill\">\r\n            <a\r\n              className=\"nav-link active\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#ManagePlacementCoordinators\"\r\n            >\r\n              Placement Coordinators\r\n            </a>\r\n            <a\r\n              className=\"nav-link\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#ManageCompanies\"\r\n            >\r\n              Companies\r\n            </a>\r\n            <a\r\n              className=\"nav-link\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#ManageStudents\"\r\n            >\r\n              Students\r\n            </a>\r\n          </nav>\r\n          <div className=\"tab-content\">\r\n            <div\r\n              className=\"tab-pane fade show active\"\r\n              id=\"ManagePlacementCoordinators\"\r\n            >\r\n              <PendingPlacementCoordinators />\r\n              <AllPlacementCoordinators />\r\n            </div>\r\n            <div className=\"tab-pane fade\" id=\"ManageCompanies\">\r\n              <PendingCompanies />\r\n              <AllCompanies />\r\n            </div>\r\n            <div className=\"tab-pane fade\" id=\"ManageStudents\">\r\n              <PendingStudents />\r\n              <AllStudents />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManageUsers;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Profile.js",["164","165","166","167"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //back end \r\n\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  //update data functions\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Middle Name (Optional)\"\r\n                  name=\"adminProfileMiddleName\"\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  name=\"adminProfileLastName\"\r\n                  \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Home.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Home.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ChangePassword.js",["168","169","170","171"],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Profile.js",["172","173","174","175"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //back end for placement profile\r\n\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone,address,department}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone,address,department\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Middle Name (Optional)\"\r\n                  name=\"placementCoordinatorProfileMiddleName\"\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  name=\"placementCoordinatorProfileLastName\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-12\">\r\n                <label className=\"col-form-label\">Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Address\"\r\n                  name=\"address\"\r\n                  value={userData.address}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Department</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Department\"\r\n                  name=\"department\"\r\n                  value={userData.department}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Notifications.js",["176","177"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for all notifications\r\n\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(({ date, title, message }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{date}</td>\r\n                <td>{title}</td>\r\n                <td>{message}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Home.js",[],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Openings.js",["178","179","180","181"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction CurrentOpenings() {\r\n  //back end\r\n  const [jobData, setJobData] = useState([]);\r\n  const history = useHistory();\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/jobopenings\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setJobData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n  //job archive back-end code\r\n  const archive = async (jobId, title) => {\r\n    console.log(\"Inside Archive function\");\r\n    console.log(jobId);\r\n    console.log(title);\r\n\r\n    try {\r\n      const res = await fetch(\"/jobArchive\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          jobId,\r\n          title,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Job ID</th>\r\n            <th>Job Title</th>\r\n            <th>Archive Job</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobData.map(({ jobId, title }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{jobId}</td>\r\n                <td>{title}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={archive.bind(this, jobId, title)}\r\n                  >\r\n                    Archive Job\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllOpenings() {\r\n  //back end for all Openings\r\n\r\n  const [jobData, setJobData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/alljobopenings\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setJobData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Job ID</th>\r\n            <th>Job Title</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobData.map(({ jobId, title }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{jobId}</td>\r\n                <td>{title}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Openings() {\r\n  //back end\r\n\r\n  const history = useHistory();\r\n  const [job, setJob] = useState({\r\n    jobId: \"\",\r\n    title: \"\",\r\n    ctc: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    console.log(e.target.value);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setJob({ ...job, [name]: value });\r\n  };\r\n\r\n  const addJob = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { jobId, title, ctc, description } = job;\r\n\r\n    try {\r\n      const res = await fetch(\"/job\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          jobId,\r\n          title,\r\n          ctc,\r\n          description,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 201) {\r\n        console.log(\"Job created successfully\");\r\n        window.alert(\"Job created successfully\");\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(\"Job Id already exists\");\r\n        window.alert(\"Job Id already exists\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div\r\n          className=\"modal fade\"\r\n          data-bs-backdrop=\"static\"\r\n          data-bs-keyboard=\"false\"\r\n          id=\"companyCreateOpening\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Create Opening</h5>\r\n                <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n              </div>\r\n              <form method=\"POST\">\r\n                <div className=\"modal-body\">\r\n                  <label className=\"form-label\" htmlFor=\"companyJobId\">\r\n                    Job Id\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"companyJobId\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job ID\"\r\n                      name=\"jobId\"\r\n                      value={job.jobId}\r\n                      onChange={handleInputs}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <label className=\"form-label\" htmlFor=\"companyJobTitle\">\r\n                    Job Title\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"companyJobTitle\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job Title\"\r\n                      name=\"title\"\r\n                      value={job.title}\r\n                      onChange={handleInputs}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <label className=\"form-label\" htmlFor=\"companyJobDescription\">\r\n                    Job Description\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <textarea\r\n                      id=\"companyJobDescription\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job Description\"\r\n                      name=\"description\"\r\n                      value={job.description}\r\n                      onChange={handleInputs}\r\n                      rows=\"4\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <label className=\"form-label\" htmlFor=\"companyCTCOffered\">\r\n                    CTC Offered\r\n                  </label>\r\n                  <input\r\n                    id=\"companyCTCOffered\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"CTC Offered\"\r\n                    name=\"ctc\"\r\n                    value={job.ctc}\r\n                    onChange={handleInputs}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    type=\"Submit\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={addJob}\r\n                  >\r\n                    Add Job\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Openings</h2>\r\n          <hr />\r\n          <Link>\r\n            <button\r\n              className=\"btn btn-primary rounded-pill\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#companyCreateOpening\"\r\n            >\r\n              Create Opening\r\n            </button>\r\n          </Link>\r\n          <h3 className=\"text-center\">Current Openings</h3>\r\n          <CurrentOpenings />\r\n          <h3 className=\"text-center\">All Openings</h3>\r\n          <AllOpenings />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Openings;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\ChangePassword.js",["182","183","184","185"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction ChangePassword() {\r\n\r\n  //backend\r\n\r\n  const [userData,setUserData] = useState({\r\n    cpassword:\"\",\r\n    npassword:\"\",\r\n    rpassword:\"\",\r\n  });\r\n  const history = useHistory();\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      //console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updatePassword = async (e) =>{\r\n\r\n    e.preventDefault();\r\n\r\n    console.log(userData);\r\n    const {cpassword,npassword,rpassword} = userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/updatePassword\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          cpassword,npassword,rpassword\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status ===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Change Password\r\n        </h2>\r\n        <hr />\r\n        <form action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Current Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Current Password\"\r\n                  name=\"cpassword\"\r\n                  value={userData.cpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">New Password</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"New Password\"\r\n                  name=\"npassword\"\r\n                  value={userData.npassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Re-enter New Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Re-enter New Password\"\r\n                  name=\"rpassword\"\r\n                  value={userData.rpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updatePassword}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Profile.js",["186","187","188","189"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n\r\n  //backend\r\n  const [userData,setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async ()=>{\r\n    try{\r\n      const res = await fetch('/userData',{\r\n        method:\"GET\",\r\n        headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials:\"include\"\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n            \r\n\r\n\r\n      if(!res.status ===200){\r\n        const error = new Error(res.error);\r\n          throw error;\r\n        }\r\n\r\n        }catch(err){\r\n            console.log(err);\r\n            history.push('');\r\n\r\n        }\r\n  }\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updateData =  async (e) =>{\r\n    e.preventDefault();\r\n\r\n    const {userName,name,email,phone,address,companyLink}= userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/update\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          userName,name,email,phone,address,companyLink\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if(res.status===202){\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      }else{\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    callAboutPage();\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Company Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-8\">\r\n                <label className=\"col-form-label\">Company Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"Company Address\"\r\n                  name=\"address\"\r\n                  value={userData.address}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <label className=\"col-form-label\">Company Website</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"\"\r\n                  placeholder=\"Company Website\"\r\n                  name=\"companyLink\"\r\n                  value={userData.companyLink}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Company E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Company Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updateData}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Applications.js",["190","191","192","193"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nfunction ApplicationStatus(props) {\r\n  if (props.status == \"BeingProcessed\") {\r\n    return (\r\n      <span className=\"badge bg-warning rounded-pill\">Being Processed</span>\r\n    );\r\n  } else if (props.status == \"Rejected\") {\r\n    return <span className=\"badge bg-danger rounded-pill\">Rejected</span>;\r\n  } else if (props.status == \"Selected\") {\r\n    return <span className=\"badge bg-success rounded-pill\">Selected</span>;\r\n  } else {\r\n    return <span className=\"badge bg-secondary rounded-pill\">Applied</span>;\r\n  }\r\n}\r\n\r\nfunction CurrentApplications() {\r\n  //backend for current applications\r\n  const [applicants, setApplicants] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    const res = await fetch(\"/studentJob\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n    setApplicants(data);\r\n    console.log(applicants);\r\n  };\r\n\r\n  const [applicant, setApplicant] = useState({\r\n    creatorName: \"\",\r\n    jobId: \"\",\r\n    title: \"\",\r\n    jobDescription: \"\",\r\n    name: \"\",\r\n    appliedDate: \"\",\r\n    applicationStatus: \"\",\r\n  });\r\n\r\n  //backend for getting student data\r\n  const [student, setstudent] = useState({});\r\n  const studentData = async (userName) => {\r\n    console.log(\"Inside Student Data\");\r\n    console.log(userName);\r\n\r\n    try {\r\n      const res = await fetch(\"/gettingStudentData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          userName,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setstudent(data);\r\n      console.log(student);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const archive = async (\r\n    creatorName,\r\n    jobId,\r\n    title,\r\n    jobDescription,\r\n    name,\r\n    appliedDate,\r\n    applicationStatus,\r\n    userName\r\n  ) => {\r\n    studentData(userName);\r\n    setApplicant({\r\n      creatorName,\r\n      jobId,\r\n      title,\r\n      jobDescription,\r\n      name,\r\n      appliedDate,\r\n      applicationStatus,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"modal fade\"\r\n        data-bs-backdrop=\"static\"\r\n        data-bs-keyboard=\"false\"\r\n        id=\"studentViewApplication\"\r\n        tabIndex=\"-1\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">View Application</h5>\r\n              <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form action=\"\" className=\"row g-3 text-start\">\r\n                <div className=\"col-md-7\">\r\n                  <label className=\"form-label\">Application Date</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={applicant.appliedDate}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                  <label className=\"form-label\">Application Status</label>\r\n                  <div className=\"mb-3\">\r\n                    <ApplicationStatus status={applicant.applicationStatus} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"form-label\">Company Name</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={applicant.creatorName}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                  <label className=\"form-label\">Job ID</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={applicant.jobId}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <label className=\"form-label\">Job Title</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={applicant.title}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"form-label\">Job Description</label>\r\n                  <textarea\r\n                    className=\"form-control mb-3\"\r\n                    value={applicant.jobDescription}\r\n                    rows=\"4\"\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">Student Username</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={student.userName}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <label className=\"form-label\">Student Name</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={student.name}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                  <label className=\"form-label\">Student Phone Number</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"tel\"\r\n                    value={student.phone}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <label className=\"form-label\">Student E-mail Address</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"email\"\r\n                    value={student.email}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">Student Department</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={student.department}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Name</th>\r\n            <th>Job ID</th>\r\n            <th>Job Title</th>\r\n            <th>Application Date</th>\r\n            <th>Application Status</th>\r\n            <th>View Application</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {applicants.map(\r\n            (\r\n              {\r\n                name,\r\n                creatorName,\r\n                jobId,\r\n                title,\r\n                appliedDate,\r\n                applicationStatus,\r\n                jobDescription,\r\n                userName,\r\n              },\r\n              id\r\n            ) => {\r\n              return (\r\n                <tr>\r\n                  <td>{id + 1}</td>\r\n                  <td>{creatorName}</td>\r\n                  <td>{jobId}</td>\r\n                  <td>{title}</td>\r\n                  <td>{appliedDate}</td>\r\n                  <td>\r\n                    <ApplicationStatus status={applicationStatus} />\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-outline-primary\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#studentViewApplication\"\r\n                      onClick={archive.bind(\r\n                        this,\r\n                        creatorName,\r\n                        jobId,\r\n                        title,\r\n                        jobDescription,\r\n                        name,\r\n                        appliedDate,\r\n                        applicationStatus,\r\n                        userName\r\n                      )}\r\n                    >\r\n                      View Application\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Applications() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Applications</h2>\r\n          <hr />\r\n          <CurrentApplications />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Applications;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\ManageUsers.js",["194","195","196","197","198","199","200","201","202"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useParams } from \"react-router-dom\";\r\nimport \"../../css/ManageUsers.css\";\r\nimport Header from \"./Header\";\r\n\r\nfunction PendingCompanies() {\r\n  //backend for pending Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/newUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Company\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const approve = async (userName, name) => {\r\n    //console.log(\"Inside Pending Companies Approve Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Company\";\r\n\r\n    try {\r\n      const res = await fetch(\"/verifyUser\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userName, name) => {\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Company\";\r\n\r\n    try {\r\n      const res = await fetch(\"/deleteUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        Pending Companies\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Username</th>\r\n            <th>Company Name</th>\r\n            <th>Company E-mail</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, email, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-success\"\r\n                    onClick={approve.bind(this, userName, name)}\r\n                  >\r\n                    Approve\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this, userName, name)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllCompanies() {\r\n  //backend for all Companies\r\n  const [companydata, setCompanyData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/verifyUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Company\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setCompanyData(data);\r\n\r\n      console.log(companydata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //delete company\r\n  const deleteUser = async (userName, name) => {\r\n    //console.log(\"Inside Pending Companies Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Company\";\r\n\r\n    try {\r\n      const res = await fetch(\"/deleteUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        All Companies\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Username</th>\r\n            <th>Company Name</th>\r\n            <th>Company E-mail</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {companydata.map(({ name, email, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>{email}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this, userName, name)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction PendingStudents() {\r\n  //backend for pending Students\r\n  const [studentdata, setStudentData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/newUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Student\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setStudentData(data);\r\n\r\n      console.log(studentdata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const approve = async (userName, name) => {\r\n    //console.log(\"Inside Pending Students Approve Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Student\";\r\n\r\n    try {\r\n      const res = await fetch(\"/verifyUser\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (userName, name) => {\r\n    //console.log(\"Inside Pending Students Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Student\";\r\n\r\n    try {\r\n      const res = await fetch(\"/deleteUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        Pending Students\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Student Username</th>\r\n            <th>Student Name</th>\r\n            <th>Approve</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentdata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-success\"\r\n                    onClick={approve.bind(this, userName, name)}\r\n                  >\r\n                    Approve\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this, userName, name)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AllStudents() {\r\n  //backend for all Students\r\n  const [studentdata, setStudentData] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/verifyUserData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: \"Student\",\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      setStudentData(data);\r\n\r\n      console.log(studentdata);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //backend Code for delete Students\r\n  const deleteUser = async (userName, name) => {\r\n    //console.log(\"Inside Pending Students Delete Functions\");\r\n    //console.log(userName,name);\r\n\r\n    const user = \"Student\";\r\n\r\n    try {\r\n      const res = await fetch(\"/deleteUsers\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user,\r\n          userName,\r\n          name,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        window.location.reload(true);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"webpageTitle\" className=\"text-center\">\r\n        All Students\r\n      </h3>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Student UserName</th>\r\n            <th>Student Name</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {studentdata.map(({ name, userName }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{userName}</td>\r\n                <td>{name}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={deleteUser.bind(this, userName, name)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ManageUsers() {\r\n  let { slug } = useParams();\r\n  let [userType, setUserType] = useState(slug);\r\n  useEffect(() => {\r\n    document\r\n      .getElementsByClassName(\"dropdown-toggle\")[0]\r\n      .classList.add(\"active\");\r\n  }, [slug]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Manage {userType}\r\n        </h2>\r\n        <hr />\r\n        <div id=\"manageUsersContainer\">\r\n          <nav className=\"nav nav-tabs nav-fill\">\r\n            <a\r\n              className=\"nav-link active\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#ManageCompanies\"\r\n            >\r\n              Companies\r\n            </a>\r\n            <a\r\n              className=\"nav-link\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#ManageStudents\"\r\n            >\r\n              Students\r\n            </a>\r\n          </nav>\r\n          <div className=\"tab-content\">\r\n            <div className=\"tab-pane fade show active\" id=\"ManageCompanies\">\r\n              <PendingCompanies />\r\n              <AllCompanies />\r\n            </div>\r\n            <div className=\"tab-pane fade\" id=\"ManageStudents\">\r\n              <PendingStudents />\r\n              <AllStudents />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManageUsers;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Profile.js",["203","204","205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Profile() {\r\n  //back end\r\n\r\n  const [userData, setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/userData\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    console.log(e.target.value);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setUserData({ ...userData, [name]: value });\r\n  };\r\n\r\n  //update data functions\r\n  const updateData = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      userName,\r\n      name,\r\n      email,\r\n      phone,\r\n      address,\r\n      department,\r\n      portfolio,\r\n      links,\r\n    } = userData;\r\n\r\n    try {\r\n      const res = await fetch(\"/update\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          userName,\r\n          name,\r\n          email,\r\n          phone,\r\n          address,\r\n          department,\r\n          portfolio,\r\n          links,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(\"User updated successfully\");\r\n        window.alert(\"User Updated successfully\");\r\n      } else {\r\n        console.log(\"User updated unsuccessful\");\r\n        window.alert(\"User Updated unsuccessful\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Profile\r\n        </h2>\r\n        <hr />\r\n        <form id=\"profileForm\" action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10 input-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  name=\"name\"\r\n                  value={userData.name}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Middle Name (Optional)\"\r\n                  name=\"studentProfileMiddleName\"\r\n                />\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  name=\"studentProfileLastName\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">E-mail Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"email\"\r\n                  placeholder=\"E-mail Address\"\r\n                  name=\"email\"\r\n                  value={userData.email}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <label className=\"col-form-label\">Phone Number</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Phone Number\"\r\n                  name=\"phone\"\r\n                  value={userData.phone}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-12\">\r\n                <label className=\"col-form-label\">Address</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"tel\"\r\n                  placeholder=\"Address\"\r\n                  name=\"address\"\r\n                  value={userData.address}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-5\">\r\n                <label className=\"col-form-label\">Department</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Department\"\r\n                  name=\"department\"\r\n                  value={userData.department}\r\n                  onChange={handleInputs}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <div className=\"col-sm-4\">\r\n                <label\r\n                  htmlFor=\"studentProfilePortfolioLink\"\r\n                  className=\"col-form-label\"\r\n                >\r\n                  Portfolio Link\r\n                </label>\r\n                <input\r\n                  id=\"studentProfilePortfolioLink\"\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Portfolio Link\"\r\n                  name=\"portfolio\"\r\n                  onChange={handleInputs}\r\n                  value={userData.portfolio}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <label htmlFor=\"studentProfileLink\" className=\"col-form-label\">\r\n                  Link\r\n                </label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Link\"\r\n                  id=\"studentProfileLink\"\r\n                  name=\"links\"\r\n                  value={userData.links}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary float-end\"\r\n            type=\"submit\"\r\n            onClick={updateData}\r\n          >\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Notifications.js",["207","208"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for all notifications\r\n\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(({ date, title, message }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{date}</td>\r\n                <td>{title}</td>\r\n                <td>{message}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\ChangePassword.js",["209","210","211","212"],"import React, { useEffect,useState } from \"react\";\r\nimport { Link, NavLink ,useHistory} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction ChangePassword() {\r\n\r\n  //backend\r\n\r\n  const [userData,setUserData] = useState({\r\n    cpassword:\"\",\r\n    npassword:\"\",\r\n    rpassword:\"\",\r\n  });\r\n  const history = useHistory();\r\n\r\n  let name,value;\r\n  const handleInputs = (e) =>{\r\n      //console.log(e.target.value);\r\n      name = e.target.name;\r\n      value=e.target.value;\r\n\r\n      setUserData({...userData,[name]:value});\r\n  }\r\n\r\n  const updatePassword = async (e) =>{\r\n\r\n    e.preventDefault();\r\n\r\n    console.log(userData);\r\n    const {cpassword,npassword,rpassword} = userData;\r\n\r\n    try{\r\n\r\n      const res = await fetch(\"/updatePassword\",{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          cpassword,npassword,rpassword\r\n        })\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status ===202){\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }else{\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main id=\"main\">\r\n        <h2 id=\"webpageTitle\" className=\"text-center\">\r\n          Change Password\r\n        </h2>\r\n        <hr />\r\n        <form action=\"\" method=\"POST\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Current Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Current Password\"\r\n                  name=\"cpassword\"\r\n                  value={userData.cpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">New Password</label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"New Password\"\r\n                  name=\"npassword\"\r\n                  value={userData.npassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-3\">\r\n              <label className=\" col-sm-3 col-form-label\">\r\n                Re-enter New Password\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Re-enter New Password\"\r\n                  name=\"rpassword\"\r\n                  value={userData.rpassword}\r\n                  onChange={handleInputs}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn btn-primary float-end\" type=\"submit\" onClick={updatePassword}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger float-end me-3\" type=\"button\">\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Notifications.js",["213","214"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for Notifications\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  const target = (students, companies, placementCoordinators) => {\r\n    let result = \"\";\r\n    if (students) {\r\n      result += \"Students,\";\r\n    }\r\n    if (companies) {\r\n      result += \" Companies,\";\r\n    }\r\n    if (placementCoordinators) {\r\n      result += \" Placement Coordinators\";\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Creator Role</th>\r\n            <th>Target</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(\r\n            (\r\n              {\r\n                creatorRole,\r\n                date,\r\n                title,\r\n                message,\r\n                students,\r\n                companies,\r\n                placementCoordinators,\r\n              },\r\n              id\r\n            ) => {\r\n              return (\r\n                <tr>\r\n                  <td>{id + 1}</td>\r\n                  <td>{date}</td>\r\n                  <td>{creatorRole}</td>\r\n                  <td>{target(students, companies, placementCoordinators)}</td>\r\n                  <td>{title}</td>\r\n                  <td>{message}</td>\r\n                </tr>\r\n              );\r\n            }\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  //backend for\r\n  const [data, setData] = useState({\r\n    students: \"false\",\r\n    placementCoordinators: \"false\",\r\n    companies: \"false\",\r\n    title: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    //console.log(e.target.name);\r\n    //console.log(e.target.value);\r\n\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    if (e.target.checked) {\r\n      data[name] = \"true\";\r\n    } else {\r\n      data[name] = \"false\";\r\n    }\r\n  };\r\n\r\n  const handleInputsChange = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const sendNotification = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(data);\r\n\r\n    const { students, placementCoordinators, companies, title, message } = data;\r\n    console.log(students, placementCoordinators, companies, title, message);\r\n    try {\r\n      const res = await fetch(\"/notifyData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          students,\r\n          placementCoordinators,\r\n          companies,\r\n          title,\r\n          message,\r\n        }),\r\n      });\r\n\r\n      const resdt = await res.json();\r\n\r\n      if (res.status === 201) {\r\n        console.log(\"Notification successfull\");\r\n        window.alert(\"Notification successfull\");\r\n      } else {\r\n        console.log(\"Notification unsuccessfull\");\r\n        window.alert(\"Notification unsuccessfull\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div\r\n          className=\"modal fade\"\r\n          data-bs-backdrop=\"static\"\r\n          data-bs-keyboard=\"false\"\r\n          id=\"adminAddNotification\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Add Notification</h5>\r\n                <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <label className=\"form-label\" htmlFor=\"adminNotificationType\">\r\n                  Notification Target\r\n                </label>\r\n                <div id=\"adminNotificationType\" className=\"mb-3\">\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"adminTargetCheckbox1\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"Placement Coordinators\"\r\n                      name=\"placementCoordinators\"\r\n                      onChange={handleInputs}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"adminTargetCheckbox1\"\r\n                    >\r\n                      Placement Coordinators\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"adminTargetCheckbox2\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"Companies\"\r\n                      name=\"companies\"\r\n                      onChange={handleInputs}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"adminTargetCheckbox2\"\r\n                    >\r\n                      Companies\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"adminTargetCheckbox3\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"Students\"\r\n                      name=\"students\"\r\n                      onChange={handleInputs}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"adminTargetCheckbox3\"\r\n                    >\r\n                      Students\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <label className=\"form-label\" htmlFor=\"adminNotificationTitle\">\r\n                  Notification Title\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    id=\"adminNotificationTitle\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Notification Title\"\r\n                    name=\"title\"\r\n                    value={data.title}\r\n                    onChange={handleInputsChange}\r\n                  />\r\n                </div>\r\n                <label\r\n                  className=\"form-label\"\r\n                  htmlFor=\"adminNotificationMessage\"\r\n                >\r\n                  Notification Message\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <textarea\r\n                    id=\"adminNotificationMessage\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Notification Message\"\r\n                    name=\"message\"\r\n                    value={data.message}\r\n                    onChange={handleInputsChange}\r\n                    rows=\"4\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                  Close\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={sendNotification}\r\n                >\r\n                  Push Notification\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n          <Link>\r\n            <button\r\n              className=\"btn btn-primary rounded-pill\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#adminAddNotification\"\r\n            >\r\n              Add Notification\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Applications.js",["215","216","217","218"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nfunction ApplicationStatus(props) {\r\n  if (props.status == \"BeingProcessed\") {\r\n    return (\r\n      <span className=\"badge bg-warning rounded-pill\">Being Processed</span>\r\n    );\r\n  } else if (props.status == \"Rejected\") {\r\n    return <span className=\"badge bg-danger rounded-pill\">Rejected</span>;\r\n  } else if (props.status == \"Selected\") {\r\n    return <span className=\"badge bg-success rounded-pill\">Selected</span>;\r\n  } else {\r\n    return <span className=\"badge bg-secondary rounded-pill\">Applied</span>;\r\n  }\r\n}\r\n\r\nconst sendStatusToBackend = async (userName, jobId, status) => {\r\n  //console.log(\"Status is \" + status, userName, jobId);\r\n  try {\r\n    const res = await fetch(\"/updateJobStatus\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userName,\r\n        jobId,\r\n        status,\r\n      }),\r\n    });\r\n    const data = await res.json();\r\n    if (res.status === 202) {\r\n      console.log(data.message);\r\n      window.alert(data.message);\r\n      window.location.reload(true);\r\n    } else {\r\n      console.log(data.message);\r\n      window.alert(data.message);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst sendStatus = (userName, jobId) => {\r\n  console.log(userName, jobId);\r\n  if (\r\n    document.getElementById(\"companyApplicationsApplicationStatus1\").checked\r\n  ) {\r\n    sendStatusToBackend(\r\n      userName,\r\n      jobId,\r\n      document.getElementById(\"companyApplicationsApplicationStatus1\").value\r\n    );\r\n  } else if (\r\n    document.getElementById(\"companyApplicationsApplicationStatus2\").checked\r\n  ) {\r\n    sendStatusToBackend(\r\n      userName,\r\n      jobId,\r\n      document.getElementById(\"companyApplicationsApplicationStatus2\").value\r\n    );\r\n  } else if (\r\n    document.getElementById(\"companyApplicationsApplicationStatus3\").checked\r\n  ) {\r\n    sendStatusToBackend(\r\n      userName,\r\n      jobId,\r\n      document.getElementById(\"companyApplicationsApplicationStatus3\").value\r\n    );\r\n  }\r\n};\r\n\r\nfunction CurrentApplications() {\r\n  //backend for current applications\r\n  const [applicants, setApplicants] = useState([]);\r\n\r\n  const callAboutPage = async () => {\r\n    const res = await fetch(\"/companyJob\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n    setApplicants(data);\r\n    console.log(applicants);\r\n  };\r\n\r\n  const [applicant, setApplicant] = useState({\r\n    creatorName: \"\",\r\n    jobId: \"\",\r\n    title: \"\",\r\n    jobDescription: \"\",\r\n    name: \"\",\r\n    appliedDate: \"\",\r\n    applicationStatus: \"\",\r\n    userName: \"\",\r\n  });\r\n\r\n  //backend for getting student data\r\n  const [student, setstudent] = useState({});\r\n  const studentData = async (userName) => {\r\n    console.log(\"Inside Student Data\");\r\n    console.log(userName);\r\n\r\n    try {\r\n      const res = await fetch(\"/gettingStudentData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          userName,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setstudent(data);\r\n      console.log(student);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const archive = async (\r\n    creatorName,\r\n    jobId,\r\n    title,\r\n    jobDescription,\r\n    name,\r\n    appliedDate,\r\n    applicationStatus,\r\n    userName\r\n  ) => {\r\n    studentData(userName);\r\n    setApplicant({\r\n      creatorName,\r\n      jobId,\r\n      title,\r\n      jobDescription,\r\n      name,\r\n      appliedDate,\r\n      applicationStatus,\r\n      userName,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"modal fade\"\r\n        data-bs-backdrop=\"static\"\r\n        data-bs-keyboard=\"false\"\r\n        id=\"companyViewApplication\"\r\n        tabIndex=\"-1\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">View Application</h5>\r\n              <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n            </div>\r\n            <div className=\"modal-body \">\r\n              <form action=\"\" className=\"row g-3 text-start\">\r\n                <div className=\"col-md-7\">\r\n                  <label className=\"form-label\">Application Date</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={applicant.appliedDate}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                  <label className=\"form-label\">Application Status</label>\r\n                  <div className=\"mb-3\">\r\n                    <ApplicationStatus status={applicant.applicationStatus} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"form-label\">Company Name</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={applicant.creatorName}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                  <label className=\"form-label\">Job ID</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={applicant.jobId}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <label className=\"form-label\">Job Title</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={applicant.title}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <label className=\"form-label\">Job Description</label>\r\n                  <textarea\r\n                    className=\"form-control mb-3\"\r\n                    value={applicant.jobDescription}\r\n                    rows=\"4\"\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">Student Username</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={student.userName}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <label className=\"form-label\">Student Name</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={student.name}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                  <label className=\"form-label\">Student Phone Number</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"tel\"\r\n                    value={student.phone}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <label className=\"form-label\">Student E-mail Address</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"email\"\r\n                    value={student.email}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <label className=\"form-label\">Student Department</label>\r\n                  <input\r\n                    className=\"form-control mb-3\"\r\n                    type=\"text\"\r\n                    value={student.department}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"modal fade\"\r\n        data-bs-backdrop=\"static\"\r\n        data-bs-keyboard=\"false\"\r\n        id=\"companyChangeApplicationStatus\"\r\n        tabIndex=\"-1\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">View Application</h5>\r\n              <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"companyApplicationsApplicationStatus\"\r\n                  value=\"Rejected\"\r\n                  id=\"companyApplicationsApplicationStatus1\"\r\n                />\r\n                <label\r\n                  class=\"form-check-label\"\r\n                  for=\"companyApplicationsApplicationStatus1\"\r\n                >\r\n                  <span className=\"badge bg-danger rounded-pill\">Rejected</span>\r\n                </label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"companyApplicationsApplicationStatus\"\r\n                  value=\"BeingProcessed\"\r\n                  id=\"companyApplicationsApplicationStatus2\"\r\n                />\r\n                <label\r\n                  class=\"form-check-label\"\r\n                  for=\"companyApplicationsApplicationStatus2\"\r\n                >\r\n                  <span className=\"badge bg-warning rounded-pill\">\r\n                    Being Processed\r\n                  </span>\r\n                </label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input\r\n                  class=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name=\"companyApplicationsApplicationStatus\"\r\n                  value=\"Selected\"\r\n                  id=\"companyApplicationsApplicationStatus3\"\r\n                />\r\n                <label\r\n                  class=\"form-check-label\"\r\n                  for=\"companyApplicationsApplicationStatus3\"\r\n                >\r\n                  <span className=\"badge bg-success rounded-pill\">\r\n                    Selected\r\n                  </span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"Submit\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => sendStatus(applicant.userName, applicant.jobId)}\r\n              >\r\n                Save Status\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Job ID</th>\r\n            <th>Name</th>\r\n            <th>Application Date</th>\r\n            <th>Application Status</th>\r\n            <th>View Application</th>\r\n            <th>Change Application Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {applicants.map(\r\n            (\r\n              {\r\n                name,\r\n                creatorName,\r\n                jobId,\r\n                title,\r\n                appliedDate,\r\n                applicationStatus,\r\n                jobDescription,\r\n                userName,\r\n              },\r\n              id\r\n            ) => {\r\n              return (\r\n                <tr>\r\n                  <td>{id + 1}</td>\r\n                  <td>{jobId}</td>\r\n                  <td>{name}</td>\r\n                  <td>{appliedDate}</td>\r\n                  <td>\r\n                    <ApplicationStatus status={applicationStatus} />\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-outline-primary\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#companyViewApplication\"\r\n                      onClick={archive.bind(\r\n                        this,\r\n                        creatorName,\r\n                        jobId,\r\n                        title,\r\n                        jobDescription,\r\n                        name,\r\n                        appliedDate,\r\n                        applicationStatus,\r\n                        userName\r\n                      )}\r\n                    >\r\n                      View Application\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-outline-primary\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#companyChangeApplicationStatus\"\r\n                      onClick={archive.bind(\r\n                        this,\r\n                        creatorName,\r\n                        jobId,\r\n                        title,\r\n                        jobDescription,\r\n                        name,\r\n                        appliedDate,\r\n                        applicationStatus,\r\n                        userName\r\n                      )}\r\n                    >\r\n                      Change Application Status\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Applications() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Applications</h2>\r\n          <hr />\r\n          <CurrentApplications />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Applications;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Notifications.js",["219","220"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nfunction AllNotifications() {\r\n  //backend for all notifications\r\n\r\n  const [notifyData, setNotifyData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/getNotification\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setNotifyData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  const target = (students, companies) => {\r\n    let result = \"\";\r\n    if (students) {\r\n      result += \"Students,\";\r\n    }\r\n    if (companies) {\r\n      result += \"Companies\";\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Timestamp</th>\r\n            <th>Creator Role</th>\r\n            <th>Target</th>\r\n            <th>Title</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {notifyData.map(\r\n            (\r\n              { creatorRole, date, title, message, students, companies },\r\n              id\r\n            ) => {\r\n              return (\r\n                <tr>\r\n                  <td>{id + 1}</td>\r\n                  <td>{date}</td>\r\n                  <td>{creatorRole}</td>\r\n                  <td>{target(students, companies)}</td>\r\n                  <td>{title}</td>\r\n                  <td>{message}</td>\r\n                </tr>\r\n              );\r\n            }\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Notifications() {\r\n  //backend for\r\n  const [data, setData] = useState({\r\n    students: \"false\",\r\n    companies: \"false\",\r\n    title: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    //console.log(e.target.name);\r\n    //console.log(e.target.value);\r\n\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    if (e.target.checked) {\r\n      data[name] = \"true\";\r\n    } else {\r\n      data[name] = \"false\";\r\n    }\r\n  };\r\n\r\n  const handleInputsChange = (e) => {\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  const sendNotification = async (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(data);\r\n\r\n    const { students, companies, title, message } = data;\r\n    console.log(students, companies, title, message);\r\n    try {\r\n      const res = await fetch(\"/notifyData\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          students,\r\n          companies,\r\n          title,\r\n          message,\r\n        }),\r\n      });\r\n\r\n      const resdt = await res.json();\r\n\r\n      if (res.status === 201) {\r\n        console.log(\"Notification successfull\");\r\n        window.alert(\"Notification successfull\");\r\n      } else {\r\n        console.log(\"Notification unsuccessfull\");\r\n        window.alert(\"Notification unsuccessfull\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div\r\n          className=\"modal fade\"\r\n          data-bs-backdrop=\"static\"\r\n          data-bs-keyboard=\"false\"\r\n          id=\"placementCoordinatorAddNotification\"\r\n          tabIndex=\"-1\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Add Notification</h5>\r\n                <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <label\r\n                  className=\"form-label\"\r\n                  htmlFor=\"placementCoordinatorNotificationType\"\r\n                >\r\n                  Notification Target\r\n                </label>\r\n                <div id=\"placementCoordinatorNotificationType\" className=\"mb-3\">\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"placementCoordinatorTargetCheckbox1\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"Companies\"\r\n                      name=\"companies\"\r\n                      onChange={handleInputs}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"placementCoordinatorTargetCheckbox1\"\r\n                    >\r\n                      Companies\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <input\r\n                      id=\"placementCoordinatorTargetCheckbox2\"\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value=\"Students\"\r\n                      name=\"students\"\r\n                      onChange={handleInputs}\r\n                    />\r\n                    <label\r\n                      className=\"form-check-label\"\r\n                      htmlFor=\"placementCoordinatorTargetCheckbox2\"\r\n                    >\r\n                      Students\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <label\r\n                  className=\"form-label\"\r\n                  htmlFor=\"placementCoordinatorNotificationTitle\"\r\n                >\r\n                  Notification Title\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <input\r\n                    id=\"placementCoordinatorNotificationTitle\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Notification Title\"\r\n                    name=\"title\"\r\n                    value={data.title}\r\n                    onChange={handleInputsChange}\r\n                  />\r\n                </div>\r\n                <label\r\n                  className=\"form-label\"\r\n                  htmlFor=\"placementCoordinatorNotificationMessage\"\r\n                >\r\n                  Notification Message\r\n                </label>\r\n                <div className=\"input-group mb-3\">\r\n                  <textarea\r\n                    id=\"placementCoordinatorNotificationMessage\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Notification Message\"\r\n                    name=\"message\"\r\n                    value={data.message}\r\n                    onChange={handleInputsChange}\r\n                    rows=\"4\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                  Close\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={sendNotification}\r\n                >\r\n                  Push Notification\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Notifications</h2>\r\n          <hr />\r\n          <Link>\r\n            <button\r\n              className=\"btn btn-primary rounded-pill\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#placementCoordinatorAddNotification\"\r\n            >\r\n              Add Notification\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <AllNotifications />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Openings.js",["221","222","223"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport Header from \"./Header\";\r\n\r\nfunction CurrentOpenings() {\r\n  //Back end\r\n  const [jobData, setJobData] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const callAboutPage1 = async () => {\r\n    try {\r\n      const res = await fetch(\"/jobopenings\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setJobData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  //student Data\r\n  const [userData, setUserData] = useState({});\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/userData\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  const [jobInfo, setJobInfo] = useState({\r\n    /*jobId: \"\",\r\n    creator: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    companyDescription: \"\",*/\r\n  });\r\n\r\n  //companyDescription\r\n  const comapny = async (value) => {\r\n    const creator = value;\r\n    try {\r\n      const res = await fetch(\"/companyDescription\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          creator,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        jobInfo.companyDescription = data.companyDescription;\r\n        console.log(jobInfo);\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const apply = async (e) => {\r\n    console.log(\"in apply\");\r\n    const { jobId, creator, title, description, companyDescription } = jobInfo;\r\n    const { userName, name, email, phone, department } = userData;\r\n\r\n    try {\r\n      const res = await fetch(\"/applyJob\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          jobId,\r\n          creator,\r\n          title,\r\n          description,\r\n          companyDescription,\r\n          userName,\r\n          name,\r\n          email,\r\n          phone,\r\n          department,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data.message);\r\n      window.alert(data.message);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  let name, value;\r\n  const archive = async (jobId, creatorName, title, description) => {\r\n    value = creatorName;\r\n    //console.log(value);\r\n    /*jobInfo.creator = value;\r\n    jobInfo.jobId = jobId;\r\n    jobInfo.title = title;\r\n    jobInfo.description = description;\r\n    console.log(jobInfo);*/\r\n    await comapny(value);\r\n    setJobInfo({\r\n      creator: value,\r\n      jobId: jobId,\r\n      title: title,\r\n      description: description,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage1();\r\n    callAboutPage();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"modal fade\"\r\n        data-bs-backdrop=\"static\"\r\n        data-bs-keyboard=\"false\"\r\n        id=\"studentViewJob\"\r\n        tabIndex=\"-1\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">View Job</h5>\r\n              <button className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n            </div>\r\n            <div className=\"modal-body text-start\">\r\n              <form className=\"row g-3\">\r\n                <div className=\"col-md-12\">\r\n                  <label\r\n                    className=\"form-label\"\r\n                    htmlFor=\"studentViewJobCompanyName\"\r\n                  >\r\n                    Company Name\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"studentViewJobCompanyName\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Company Name\"\r\n                      name=\"CompanyName\"\r\n                      value={jobInfo.creator}\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                  <label className=\"form-label\" htmlFor=\"studentViewJobJobID\">\r\n                    Job ID\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"studentViewJobJobID\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job ID\"\r\n                      name=\"JobID\"\r\n                      value={jobInfo.jobId}\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                  <label\r\n                    className=\"form-label\"\r\n                    htmlFor=\"studentViewJobJobTitle\"\r\n                  >\r\n                    Job Title\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      id=\"studentViewJobJobTitle\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job Title\"\r\n                      name=\"JobTitle\"\r\n                      value={jobInfo.title}\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                  <label\r\n                    className=\"form-label\"\r\n                    htmlFor=\"studentViewJobJobDescription\"\r\n                  >\r\n                    Job Description\r\n                  </label>\r\n                  <div className=\"input-group mb-3\">\r\n                    <textarea\r\n                      id=\"studentViewJobJobDescription\"\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Job Description\"\r\n                      name=\"message\"\r\n                      rows=\"4\"\r\n                      value={jobInfo.description}\r\n                      disabled\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-primary\" onClick={apply}>\r\n                Apply to this job\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <table className=\"table align-middle\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Company Name</th>\r\n            <th>Job Title</th>\r\n            <th>View Job</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobData.map(({ jobId, creatorName, title, description }, id) => {\r\n            return (\r\n              <tr>\r\n                <td>{id + 1}</td>\r\n                <td>{creatorName}</td>\r\n                <td>{title}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-outline-primary\"\r\n                    data-bs-target=\"#studentViewJob\"\r\n                    data-bs-toggle=\"modal\"\r\n                    onClick={archive.bind(\r\n                      this,\r\n                      jobId,\r\n                      creatorName,\r\n                      title,\r\n                      description\r\n                    )}\r\n                  >\r\n                    View Job\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Openings() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <div className=\"text-center\">\r\n          <h2 id=\"webpageTitle\">Openings</h2>\r\n          <hr />\r\n          <h3 className=\"text-center\">Current Openings</h3>\r\n          <CurrentOpenings />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Openings;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\Authenticator.js",["224","225","226","227","228","229"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useHistory, Redirect } from \"react-router-dom\";\r\nimport \"../css/Header.css\";\r\nimport \"../css/Home.css\";\r\nimport crslogo from \"../img/crslogo.png\";\r\nimport Select from \"react-select\";\r\n\r\nfunction Authenticator(props) {\r\n  let [authMode, setAuthMode] = useState(props.location.state.authMode);\r\n  let [authTitle, setAuthTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (authMode === \"login\") {\r\n      setAuthTitle(\"Login to Campus Recruitment System\");\r\n      document.getElementById(\"loginForm\").style.display = \"block\";\r\n      document.getElementById(\"registerForm\").style.display = \"None\";\r\n    } else {\r\n      setAuthTitle(\"Signup on Campus Recruitment System\");\r\n      document.getElementById(\"loginForm\").style.display = \"None\";\r\n      document.getElementById(\"registerForm\").style.display = \"block\";\r\n    }\r\n  }, [authMode]);\r\n\r\n  //backend\r\n  const history = useHistory();\r\n  const data = [\r\n    {\r\n      value: 1,\r\n      label: \"Admin\",\r\n    },\r\n    {\r\n      value: 2,\r\n      label: \"Placement Coordinator\",\r\n    },\r\n    {\r\n      value: 3,\r\n      label: \"Company\",\r\n    },\r\n    {\r\n      value: 4,\r\n      label: \"Student\",\r\n    },\r\n  ];\r\n\r\n  const [user, setUser] = useState({\r\n    member: \"\",\r\n    userName: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [signUser, setSignUser] = useState({\r\n    member: \"\",\r\n    userName: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    rpassword: \"\",\r\n  });\r\n  const [selectedValue, setSelectedValue] = useState();\r\n  let name, value;\r\n  const handleInputs = (e) => {\r\n    console.log(e.target.value);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n  const handleChange = (e) => {\r\n    setSelectedValue(e.label);\r\n    name = \"member\";\r\n    value = e.label;\r\n    setUser({ ...user, [name]: value });\r\n    console.log(e.label);\r\n    console.log(user.member);\r\n  };\r\n\r\n  //sign up form\r\n\r\n  const handleChange1 = (e) => {\r\n    setSelectedValue(e.label);\r\n    name = \"member\";\r\n    value = e.label;\r\n    setSignUser({ ...user, [name]: value });\r\n    console.log(e.label);\r\n    console.log(user.member);\r\n  };\r\n\r\n  const handleInputs1 = (e) => {\r\n    console.log(e.target.value);\r\n    name = e.target.name;\r\n    value = e.target.value;\r\n\r\n    setSignUser({ ...signUser, [name]: value });\r\n  };\r\n  const random = (e) => {\r\n    console.log(\"calling a function\");\r\n  };\r\n\r\n  //register a user\r\n  const registerUser = async (e) => {\r\n    e.preventDefault();\r\n    console.log(signUser);\r\n\r\n    const { member, userName, name, email, password, rpassword } = signUser;\r\n    try {\r\n      const res = await fetch(\"/registerUser\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          member,\r\n          userName,\r\n          name,\r\n          email,\r\n          password,\r\n          rpassword,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 201) {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n        history.push(\"/\");\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const logIn = async (e) => {\r\n    e.preventDefault();\r\n    console.log(user);\r\n    const { member, userName, password } = user;\r\n    try {\r\n      const res = await fetch(\"/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          member,\r\n          userName,\r\n          password,\r\n        }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 202) {\r\n        console.log(\"SuccessFul\");\r\n        window.alert(\"Successful\");\r\n\r\n        if (member == \"Student\") {\r\n          history.push(\"/Student/Home\");\r\n        } else if (member == \"Placement Coordinator\") {\r\n          history.push(\"/PlacementCoordinator/Home\");\r\n        } else if (member == \"Company\") {\r\n          history.push(\"/Company/Home\");\r\n        } else if (member == \"Admin\") {\r\n          history.push(\"/Admin/Home\");\r\n        }\r\n      } else {\r\n        console.log(data.message);\r\n        window.alert(data.message);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Error\");\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#homeAuthNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"homeAuthNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/About\">\r\n                    About\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n      <main id=\"homeAuthMain\">\r\n        <h2 className=\"text-center\">{authTitle}</h2>\r\n        <form id=\"loginForm\" action=\"\" method=\"POST\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"InputLoginMemberType\">\r\n              Member Type\r\n            </label>\r\n            <Select\r\n              id=\"InputLoginMemberType\"\r\n              placeholder=\"Select Option\"\r\n              name=\"member\"\r\n              value={data.find((obj) => obj.value === selectedValue)} // set selected value\r\n              options={data} // set list of the data\r\n              onChange={handleChange} // assign onChange function\r\n            />\r\n          </div>\r\n          <label className=\"form-label\" htmlFor=\"InputLoginUsername\">\r\n            Username\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">@</span>\r\n            <input\r\n              id=\"InputLoginUsername\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              name=\"userName\"\r\n              value={user.userName}\r\n              onChange={handleInputs}\r\n              required\r\n            />\r\n          </div>\r\n          <label className=\"form-label\" htmlFor=\"InputLoginPassword\">\r\n            Password\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              id=\"InputLoginPassword\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={user.password}\r\n              onChange={handleInputs}\r\n              required\r\n            />\r\n            <button\r\n              id=\"homeAuthButtonForgotPassword\"\r\n              className=\"btn btn-outline-warning\"\r\n            >\r\n              Forgot Password?\r\n            </button>\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary float-start\"\r\n            onClick={() =>\r\n              setAuthMode(authMode === \"login\" ? \"signup\" : \"login\")\r\n            }\r\n          >\r\n            New to Campus Recruitment System? Register here!\r\n          </button>\r\n          <button\r\n            className=\"btn btn-success float-end\"\r\n            onClick={logIn}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n        <form id=\"registerForm\" action=\"\" method=\"POST\">\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\" htmlFor=\"InputRegisterMemberType\">\r\n              Member Type\r\n            </label>\r\n            <Select\r\n              id=\"InputRegisterMemberType\"\r\n              placeholder=\"Select Option\"\r\n              name=\"member\"\r\n              value={data.find((obj) => obj.value === selectedValue)} // set selected value\r\n              options={data} // set list of the data\r\n              onChange={handleChange1} // assign onChange function\r\n            />\r\n          </div>\r\n\r\n          <label className=\"form-label\" htmlFor=\"InputRegisterUsername\">\r\n            Username\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <span className=\"input-group-text\">@</span>\r\n            <input\r\n              id=\"InputRegisterUsername\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              name=\"userName\"\r\n              value={signUser.userName}\r\n              onChange={handleInputs1}\r\n              required\r\n            />\r\n          </div>\r\n          <label className=\"form-label\" htmlFor=\"InputRegisterName\">\r\n            Name\r\n          </label>\r\n          <div className=\"mb-3\">\r\n            <input\r\n              id=\"InputRegisterName\"\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              value={signUser.name}\r\n              onChange={handleInputs1}\r\n              required\r\n            />\r\n          </div>\r\n          <label className=\"form-label\" htmlFor=\"InputRegisterEmail\">\r\n            Email\r\n          </label>\r\n          <div className=\"mb-3\">\r\n            <input\r\n              id=\"InputRegisterEmail\"\r\n              className=\"form-control\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              value={signUser.email}\r\n              onChange={handleInputs1}\r\n              required\r\n            />\r\n          </div>\r\n          <label className=\"form-label\" htmlFor=\"InputRegisterPassword\">\r\n            Password\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              id=\"InputRegisterPassword\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={signUser.password}\r\n              onChange={handleInputs1}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <label className=\"form-label\" htmlFor=\"InputRegisterReenterPassword\">\r\n            Re-enter Password\r\n          </label>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              id=\"InputRegisterReenterPassword\"\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"Re-enter Password\"\r\n              name=\"rpassword\"\r\n              value={signUser.rpassword}\r\n              onChange={handleInputs1}\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary float-start\"\r\n            onClick={() =>\r\n              setAuthMode(authMode === \"login\" ? \"signup\" : \"login\")\r\n            }\r\n          >\r\n            Already have an account? Login here!\r\n          </button>\r\n          <button\r\n            className=\"btn btn-success float-end\"\r\n            onClick={registerUser}\r\n            type=\"submit\"\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Authenticator;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\admin\\Header.js",["230","231"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  //back end\r\n\r\n  const [userData, setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/userData\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/Admin/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#adminNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"adminNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Admin/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Admin/ManageUsers\">\r\n                    Manage Users\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Admin/Notifications\">\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink className=\"dropdown-item\" to=\"/Admin/Profile\">\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Admin/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{userData.userName}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\company\\Header.js",["232","233"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  //backend\r\n  const [userData, setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/userData\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"dropdown-toggle\")[0].style.userSelect =\r\n      \"None\";\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/Company/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#companyNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"companyNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Applications\">\r\n                    Applications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Openings\">\r\n                    Openings\r\n                  </NavLink>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Company/Notifications\">\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink className=\"dropdown-item\" to=\"/Company/Profile\">\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Company/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{userData.userName}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\student\\Header.js",["234","235"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  //back end\r\n\r\n  const [userData, setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/userData\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.getElementsByClassName(\"dropdown-toggle\")[0].style.userSelect =\r\n      \"None\";\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/Student/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#studentNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div id=\"studentNavbarMenu\" className=\"collapse navbar-collapse\">\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Applications\">\r\n                    Applications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Openings\">\r\n                    Openings\r\n                  </NavLink>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Student/Notifications\">\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink className=\"dropdown-item\" to=\"/Student/Profile\">\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/Student/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{userData.userName}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n",["236","237"],"C:\\Users\\Asus\\Desktop\\Projects\\Campus-Recruitment-System\\client\\src\\snippets\\placement-coordinator\\Header.js",["238","239"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport \"../../css/Header.css\";\r\nimport crslogo from \"../../img/crslogo.png\";\r\n\r\nfunction Header(props) {\r\n  //backend\r\n  const [userData, setUserData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const callAboutPage = async () => {\r\n    try {\r\n      const res = await fetch(\"/userData\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setUserData(data);\r\n\r\n      if (!res.status === 200) {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      history.push(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAboutPage();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <header>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/PlacementCoordinator/Home\">\r\n              <img\r\n                className=\"float-start\"\r\n                src={crslogo}\r\n                alt=\"\"\r\n                width=\"50px\"\r\n                height=\"auto\"\r\n              />\r\n              <h1 id=\"headerBrandName\" className=\"navbar-text\">\r\n                Campus Recruitment System\r\n              </h1>\r\n            </Link>\r\n            <button\r\n              class=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#placementCoordinatorNavbarMenu\"\r\n            >\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div\r\n              id=\"placementCoordinatorNavbarMenu\"\r\n              className=\"collapse navbar-collapse\"\r\n            >\r\n              <ul className=\"navbar-nav ms-auto\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/PlacementCoordinator/Home\">\r\n                    Home\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"/PlacementCoordinator/ManageUsers\"\r\n                  >\r\n                    Manage Users\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"/PlacementCoordinator/Notifications\"\r\n                  >\r\n                    Notifications\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <a\r\n                    className=\"nav-link dropdown-toggle\"\r\n                    role=\"button\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                  >\r\n                    @{userData.userName}\r\n                  </a>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/PlacementCoordinator/Profile\"\r\n                    >\r\n                      Edit Profile\r\n                    </NavLink>\r\n                    <NavLink\r\n                      className=\"dropdown-item\"\r\n                      to=\"/PlacementCoordinator/ChangePassword\"\r\n                    >\r\n                      Change Password\r\n                    </NavLink>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <Link className=\"dropdown-item\" to=\"/\">\r\n                      Logout @{userData.userName}\r\n                    </Link>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n",{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"244","severity":1,"message":"250","line":13,"column":9,"nodeType":"246","messageId":"247","endLine":13,"endColumn":16},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"244","severity":1,"message":"251","line":2,"column":25,"nodeType":"246","messageId":"247","endLine":2,"endColumn":34},{"ruleId":"252","severity":1,"message":"253","line":101,"column":6,"nodeType":"254","endLine":101,"endColumn":8,"suggestions":"255"},{"ruleId":"252","severity":1,"message":"253","line":212,"column":6,"nodeType":"254","endLine":212,"endColumn":8,"suggestions":"256"},{"ruleId":"252","severity":1,"message":"253","line":348,"column":6,"nodeType":"254","endLine":348,"endColumn":8,"suggestions":"257"},{"ruleId":"252","severity":1,"message":"253","line":461,"column":6,"nodeType":"254","endLine":461,"endColumn":8,"suggestions":"258"},{"ruleId":"252","severity":1,"message":"253","line":599,"column":6,"nodeType":"254","endLine":599,"endColumn":8,"suggestions":"259"},{"ruleId":"252","severity":1,"message":"253","line":711,"column":6,"nodeType":"254","endLine":711,"endColumn":8,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":762,"column":13,"nodeType":"263","endLine":766,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":769,"column":13,"nodeType":"263","endLine":773,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":776,"column":13,"nodeType":"263","endLine":780,"endColumn":14},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"244","severity":1,"message":"264","line":69,"column":13,"nodeType":"246","messageId":"247","endLine":69,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":86,"column":5,"nodeType":"254","endLine":86,"endColumn":7,"suggestions":"265"},{"ruleId":"244","severity":1,"message":"245","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"244","severity":1,"message":"250","line":13,"column":9,"nodeType":"246","messageId":"247","endLine":13,"endColumn":16},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"244","severity":1,"message":"264","line":67,"column":13,"nodeType":"246","messageId":"247","endLine":67,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":84,"column":5,"nodeType":"254","endLine":84,"endColumn":7,"suggestions":"266"},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":38,"column":6,"nodeType":"254","endLine":38,"endColumn":8,"suggestions":"267"},{"ruleId":"252","severity":1,"message":"253","line":67,"column":6,"nodeType":"254","endLine":67,"endColumn":8,"suggestions":"268"},{"ruleId":"252","severity":1,"message":"253","line":137,"column":6,"nodeType":"254","endLine":137,"endColumn":8,"suggestions":"269"},{"ruleId":"244","severity":1,"message":"250","line":167,"column":9,"nodeType":"246","messageId":"247","endLine":167,"endColumn":16},{"ruleId":"244","severity":1,"message":"264","line":203,"column":13,"nodeType":"246","messageId":"247","endLine":203,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"244","severity":1,"message":"250","line":14,"column":9,"nodeType":"246","messageId":"247","endLine":14,"endColumn":16},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"244","severity":1,"message":"264","line":66,"column":13,"nodeType":"246","messageId":"247","endLine":66,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":83,"column":5,"nodeType":"254","endLine":83,"endColumn":7,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":5,"column":20,"nodeType":"273","messageId":"274","endLine":5,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":9,"column":27,"nodeType":"273","messageId":"274","endLine":9,"endColumn":29},{"ruleId":"271","severity":1,"message":"272","line":11,"column":27,"nodeType":"273","messageId":"274","endLine":11,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":98,"column":6,"nodeType":"254","endLine":98,"endColumn":8,"suggestions":"275"},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":102,"column":6,"nodeType":"254","endLine":102,"endColumn":8,"suggestions":"276"},{"ruleId":"252","severity":1,"message":"253","line":216,"column":6,"nodeType":"254","endLine":216,"endColumn":8,"suggestions":"277"},{"ruleId":"252","severity":1,"message":"253","line":354,"column":6,"nodeType":"254","endLine":354,"endColumn":8,"suggestions":"278"},{"ruleId":"252","severity":1,"message":"253","line":466,"column":6,"nodeType":"254","endLine":466,"endColumn":8,"suggestions":"279"},{"ruleId":"244","severity":1,"message":"280","line":508,"column":18,"nodeType":"246","messageId":"247","endLine":508,"endColumn":29},{"ruleId":"261","severity":1,"message":"262","line":524,"column":13,"nodeType":"263","endLine":528,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":531,"column":13,"nodeType":"263","endLine":535,"endColumn":14},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"244","severity":1,"message":"264","line":78,"column":13,"nodeType":"246","messageId":"247","endLine":78,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":94,"column":6,"nodeType":"254","endLine":94,"endColumn":8,"suggestions":"281"},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":38,"column":6,"nodeType":"254","endLine":38,"endColumn":8,"suggestions":"282"},{"ruleId":"244","severity":1,"message":"245","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"249","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":23},{"ruleId":"244","severity":1,"message":"250","line":14,"column":9,"nodeType":"246","messageId":"247","endLine":14,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":52,"column":6,"nodeType":"254","endLine":52,"endColumn":8,"suggestions":"283"},{"ruleId":"244","severity":1,"message":"284","line":153,"column":13,"nodeType":"246","messageId":"247","endLine":153,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":5,"column":20,"nodeType":"273","messageId":"274","endLine":5,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":9,"column":27,"nodeType":"273","messageId":"274","endLine":9,"endColumn":29},{"ruleId":"271","severity":1,"message":"272","line":11,"column":27,"nodeType":"273","messageId":"274","endLine":11,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":157,"column":6,"nodeType":"254","endLine":157,"endColumn":8,"suggestions":"285"},{"ruleId":"252","severity":1,"message":"253","line":50,"column":6,"nodeType":"254","endLine":50,"endColumn":8,"suggestions":"286"},{"ruleId":"244","severity":1,"message":"284","line":141,"column":13,"nodeType":"246","messageId":"247","endLine":141,"endColumn":18},{"ruleId":"244","severity":1,"message":"248","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":14},{"ruleId":"244","severity":1,"message":"287","line":132,"column":7,"nodeType":"246","messageId":"247","endLine":132,"endColumn":11},{"ruleId":"252","severity":1,"message":"288","line":153,"column":6,"nodeType":"254","endLine":153,"endColumn":8,"suggestions":"289"},{"ruleId":"244","severity":1,"message":"290","line":2,"column":37,"nodeType":"246","messageId":"247","endLine":2,"endColumn":45},{"ruleId":"244","severity":1,"message":"291","line":95,"column":9,"nodeType":"246","messageId":"247","endLine":95,"endColumn":15},{"ruleId":"271","severity":1,"message":"272","line":159,"column":20,"nodeType":"273","messageId":"274","endLine":159,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":161,"column":27,"nodeType":"273","messageId":"274","endLine":161,"endColumn":29},{"ruleId":"271","severity":1,"message":"272","line":163,"column":27,"nodeType":"273","messageId":"274","endLine":163,"endColumn":29},{"ruleId":"271","severity":1,"message":"272","line":165,"column":27,"nodeType":"273","messageId":"274","endLine":165,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":39,"column":6,"nodeType":"254","endLine":39,"endColumn":8,"suggestions":"292"},{"ruleId":"261","severity":1,"message":"262","line":83,"column":19,"nodeType":"263","endLine":87,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":40,"column":6,"nodeType":"254","endLine":40,"endColumn":8,"suggestions":"293"},{"ruleId":"261","severity":1,"message":"262","line":90,"column":19,"nodeType":"263","endLine":94,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":41,"column":6,"nodeType":"254","endLine":41,"endColumn":8,"suggestions":"294"},{"ruleId":"261","severity":1,"message":"262","line":91,"column":19,"nodeType":"263","endLine":95,"endColumn":20},{"ruleId":"240","replacedBy":"295"},{"ruleId":"242","replacedBy":"296"},{"ruleId":"252","severity":1,"message":"253","line":38,"column":6,"nodeType":"254","endLine":38,"endColumn":8,"suggestions":"297"},{"ruleId":"261","severity":1,"message":"262","line":91,"column":19,"nodeType":"263","endLine":95,"endColumn":20},"no-native-reassign",["298"],"no-negated-in-lhs",["299"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NavLink' is defined but never used.","'history' is assigned a value but never used.","'useParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callAboutPage'. Either include it or remove the dependency array.","ArrayExpression",["300"],["301"],["302"],["303"],["304"],["305"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'data' is assigned a value but never used.",["306"],["307"],["308"],["309"],["310"],["311"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["312"],["313"],["314"],["315"],["316"],"'setUserType' is assigned a value but never used.",["317"],["318"],["319"],"'resdt' is assigned a value but never used.",["320"],["321"],"'name' is defined but never used.","React Hook useEffect has missing dependencies: 'callAboutPage' and 'callAboutPage1'. Either include them or remove the dependency array.",["322"],"'Redirect' is defined but never used.","'random' is assigned a value but never used.",["323"],["324"],["325"],["298"],["299"],["326"],"no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"327","fix":"329"},{"desc":"327","fix":"330"},{"desc":"327","fix":"331"},{"desc":"327","fix":"332"},{"desc":"327","fix":"333"},{"desc":"327","fix":"334"},{"desc":"327","fix":"335"},{"desc":"327","fix":"336"},{"desc":"327","fix":"337"},{"desc":"327","fix":"338"},{"desc":"327","fix":"339"},{"desc":"327","fix":"340"},{"desc":"327","fix":"341"},{"desc":"327","fix":"342"},{"desc":"327","fix":"343"},{"desc":"327","fix":"344"},{"desc":"327","fix":"345"},{"desc":"327","fix":"346"},{"desc":"327","fix":"347"},{"desc":"327","fix":"348"},{"desc":"327","fix":"349"},{"desc":"350","fix":"351"},{"desc":"327","fix":"352"},{"desc":"327","fix":"353"},{"desc":"327","fix":"354"},{"desc":"327","fix":"355"},"Update the dependencies array to be: [callAboutPage]",{"range":"356","text":"357"},{"range":"358","text":"357"},{"range":"359","text":"357"},{"range":"360","text":"357"},{"range":"361","text":"357"},{"range":"362","text":"357"},{"range":"363","text":"357"},{"range":"364","text":"357"},{"range":"365","text":"357"},{"range":"366","text":"357"},{"range":"367","text":"357"},{"range":"368","text":"357"},{"range":"369","text":"357"},{"range":"370","text":"357"},{"range":"371","text":"357"},{"range":"372","text":"357"},{"range":"373","text":"357"},{"range":"374","text":"357"},{"range":"375","text":"357"},{"range":"376","text":"357"},{"range":"377","text":"357"},{"range":"378","text":"357"},"Update the dependencies array to be: [callAboutPage, callAboutPage1]",{"range":"379","text":"380"},{"range":"381","text":"357"},{"range":"382","text":"357"},{"range":"383","text":"357"},{"range":"384","text":"357"},[2427,2429],"[callAboutPage]",[5202,5204],[8431,8433],[11203,11205],[14465,14467],[17202,17204],[1871,1873],[1901,1903],[926,928],[1620,1622],[3229,3231],[1878,1880],[2359,2361],[2412,2414],[5200,5202],[8462,8464],[11186,11188],[2080,2082],[926,928],[1244,1246],[3902,3904],[1140,1142],[3646,3648],"[callAboutPage, callAboutPage1]",[942,944],[1032,1034],[1035,1037],[939,941]]